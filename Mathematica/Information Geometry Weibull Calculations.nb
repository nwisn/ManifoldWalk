(* Content-type: application/mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 7.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       145,          7]
NotebookDataLength[    250825,       5329]
NotebookOptionsPosition[    247708,       5219]
NotebookOutlinePosition[    248064,       5235]
CellTagsIndexPosition[    248021,       5232]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["\<\
Information Geometry of the Weibull Distribution\
\>", "Title",
 CellChangeTimes->{{3.508388428678046*^9, 3.5083884658911743`*^9}, {
  3.5083894398968844`*^9, 3.5083894479803467`*^9}, {3.517084231074979*^9, 
  3.517084232944584*^9}}],

Cell["Nicholas Wisniewski", "Subtitle",
 CellChangeTimes->{{3.508389452988633*^9, 3.5083894553937707`*^9}}],

Cell[BoxData[
 RowBox[{"Clear", "[", "x", "]"}]], "Input",
 CellChangeTimes->{{3.517084299359095*^9, 3.517084300810482*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"a", "=", "k"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"b", "=", "\[Lambda]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"distribution", "=", 
   RowBox[{"PDF", "[", 
    RowBox[{
     RowBox[{"WeibullDistribution", "[", 
      RowBox[{"a", ",", "b"}], "]"}], ",", "x"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pdfCoords", "=", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pdfAssumptions", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a", ">", "0"}], ",", 
     RowBox[{"b", ">", "0"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pdfIntegrationLimits", "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", "\[Infinity]"}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.508386892614188*^9, 3.508386899060557*^9}, {
  3.508387103180232*^9, 3.5083871222433224`*^9}, {3.5083873214187145`*^9, 
  3.5083873216867294`*^9}, {3.5083875416163087`*^9, 3.508387553298977*^9}, {
  3.508387682777383*^9, 3.5083876829553933`*^9}, {3.508388364710387*^9, 
  3.5083883705367203`*^9}, {3.5083884724465494`*^9, 3.5083884744556646`*^9}, {
  3.5083885491289353`*^9, 3.508388563635765*^9}, {3.5083886009549*^9, 
  3.5083886056891704`*^9}, {3.517084145046687*^9, 3.517084154668488*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"g", "=", 
  RowBox[{"FisherMetric", "[", 
   RowBox[{
   "distribution", ",", "pdfCoords", ",", "pdfAssumptions", ",", 
    "pdfIntegrationLimits"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.5081613488630505`*^9, 3.5081615368778048`*^9}, {
  3.5083830684124565`*^9, 3.508383074687815*^9}, {3.5083869167145667`*^9, 
  3.5083869186906796`*^9}, {3.5083871652537823`*^9, 3.508387179778613*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"6", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "EulerGamma"}], ")"}], "2"]}], "+", 
       SuperscriptBox["\[Pi]", "2"]}], 
      RowBox[{"6", " ", 
       SuperscriptBox["k", "2"]}]], ",", 
     FractionBox[
      RowBox[{
       RowBox[{"-", "1"}], "+", "EulerGamma"}], "\[Lambda]"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"-", "1"}], "+", "EulerGamma"}], "\[Lambda]"], ",", 
     FractionBox[
      SuperscriptBox["k", "2"], 
      SuperscriptBox["\[Lambda]", "2"]]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.5081615670185285`*^9, 3.5081615773241177`*^9}, 
   3.5081616170403895`*^9, 3.5083787012056665`*^9, 3.5083787438821073`*^9, 
   3.5083787757789316`*^9, 3.5083831470889564`*^9, 3.508386922335888*^9, 
   3.5083873306542425`*^9, {3.5083877157582693`*^9, 3.5083877303671045`*^9}, 
   3.5083883811093254`*^9, 3.5083886159697585`*^9, 3.517084259149445*^9, 
   3.5170845205654087`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"g", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      FractionBox[
       RowBox[{
        RowBox[{"6", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "EulerGamma"}], ")"}], "2"]}], "+", 
        SuperscriptBox["\[Pi]", "2"]}], 
       RowBox[{"6", " ", 
        SuperscriptBox["k", "2"]}]], ",", 
      FractionBox[
       RowBox[{
        RowBox[{"-", "1"}], "+", "EulerGamma"}], "\[Lambda]"]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      FractionBox[
       RowBox[{
        RowBox[{"-", "1"}], "+", "EulerGamma"}], "\[Lambda]"], ",", 
      FractionBox[
       SuperscriptBox["k", "2"], 
       SuperscriptBox["\[Lambda]", "2"]]}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.51708987803579*^9, 3.517089882503112*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"6", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "EulerGamma"}], ")"}], "2"]}], "+", 
       SuperscriptBox["\[Pi]", "2"]}], 
      RowBox[{"6", " ", 
       SuperscriptBox["k", "2"]}]], ",", 
     FractionBox[
      RowBox[{
       RowBox[{"-", "1"}], "+", "EulerGamma"}], "\[Lambda]"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"-", "1"}], "+", "EulerGamma"}], "\[Lambda]"], ",", 
     FractionBox[
      SuperscriptBox["k", "2"], 
      SuperscriptBox["\[Lambda]", "2"]]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.517089883747061*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[CapitalGamma]", "=", 
  RowBox[{"LeviCivitaCoefficients", "[", 
   RowBox[{"g", ",", "pdfCoords"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.508161636207486*^9, 3.5081616667522326`*^9}, {
  3.508383080261134*^9, 3.5083830961910453`*^9}, {3.508387210998399*^9, 
  3.5083872118424473`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{
          RowBox[{"6", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "EulerGamma"}], ")"}], "2"]}], "+", 
          SuperscriptBox["\[Pi]", "2"]}], 
         RowBox[{"k", " ", 
          SuperscriptBox["\[Pi]", "2"]}]]}], ",", 
       FractionBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "EulerGamma"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"6", " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "EulerGamma"}], ")"}], "2"]}], "+", 
           SuperscriptBox["\[Pi]", "2"]}], ")"}], " ", "\[Lambda]"}], 
        RowBox[{
         SuperscriptBox["k", "3"], " ", 
         SuperscriptBox["\[Pi]", "2"]}]]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"6", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "EulerGamma"}], ")"}], " ", "k"}], 
         RowBox[{
          SuperscriptBox["\[Pi]", "2"], " ", "\[Lambda]"}]]}], ",", 
       FractionBox[
        RowBox[{
         RowBox[{"6", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "EulerGamma"}], ")"}], "2"]}], "+", 
         SuperscriptBox["\[Pi]", "2"]}], 
        RowBox[{"k", " ", 
         SuperscriptBox["\[Pi]", "2"]}]]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"6", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "EulerGamma"}], ")"}], " ", "k"}], 
         RowBox[{
          SuperscriptBox["\[Pi]", "2"], " ", "\[Lambda]"}]]}], ",", 
       FractionBox[
        RowBox[{
         RowBox[{"6", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "EulerGamma"}], ")"}], "2"]}], "+", 
         SuperscriptBox["\[Pi]", "2"]}], 
        RowBox[{"k", " ", 
         SuperscriptBox["\[Pi]", "2"]}]]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"6", " ", 
          SuperscriptBox["k", "3"]}], 
         RowBox[{
          SuperscriptBox["\[Pi]", "2"], " ", 
          SuperscriptBox["\[Lambda]", "2"]}]]}], ",", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{
          RowBox[{"6", " ", "k"}], "-", 
          RowBox[{"6", " ", "EulerGamma", " ", "k"}], "+", 
          SuperscriptBox["\[Pi]", "2"]}], 
         RowBox[{
          SuperscriptBox["\[Pi]", "2"], " ", "\[Lambda]"}]]}]}], "}"}]}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.5081616682743196`*^9, 3.5081628871770372`*^9, 
  3.508378780015174*^9, 3.508383149651103*^9, 3.5083873336294127`*^9, 
  3.50838773046011*^9, 3.508388381206331*^9, 3.508388616541791*^9, 
  3.517084550056883*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[CapitalGamma]", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", 
         FractionBox[
          RowBox[{
           RowBox[{"6", " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "EulerGamma"}], ")"}], "2"]}], "+", 
           SuperscriptBox["\[Pi]", "2"]}], 
          RowBox[{"k", " ", 
           SuperscriptBox["\[Pi]", "2"]}]]}], ",", 
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "EulerGamma"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"6", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "EulerGamma"}], ")"}], "2"]}], "+", 
            SuperscriptBox["\[Pi]", "2"]}], ")"}], " ", "\[Lambda]"}], 
         RowBox[{
          SuperscriptBox["k", "3"], " ", 
          SuperscriptBox["\[Pi]", "2"]}]]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", 
         FractionBox[
          RowBox[{"6", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "EulerGamma"}], ")"}], " ", "k"}], 
          RowBox[{
           SuperscriptBox["\[Pi]", "2"], " ", "\[Lambda]"}]]}], ",", 
        FractionBox[
         RowBox[{
          RowBox[{"6", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "EulerGamma"}], ")"}], "2"]}], "+", 
          SuperscriptBox["\[Pi]", "2"]}], 
         RowBox[{"k", " ", 
          SuperscriptBox["\[Pi]", "2"]}]]}], "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", 
         FractionBox[
          RowBox[{"6", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "EulerGamma"}], ")"}], " ", "k"}], 
          RowBox[{
           SuperscriptBox["\[Pi]", "2"], " ", "\[Lambda]"}]]}], ",", 
        FractionBox[
         RowBox[{
          RowBox[{"6", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "EulerGamma"}], ")"}], "2"]}], "+", 
          SuperscriptBox["\[Pi]", "2"]}], 
         RowBox[{"k", " ", 
          SuperscriptBox["\[Pi]", "2"]}]]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", 
         FractionBox[
          RowBox[{"6", " ", 
           SuperscriptBox["k", "3"]}], 
          RowBox[{
           SuperscriptBox["\[Pi]", "2"], " ", 
           SuperscriptBox["\[Lambda]", "2"]}]]}], ",", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{
           RowBox[{"6", " ", "k"}], "-", 
           RowBox[{"6", " ", "EulerGamma", " ", "k"}], "+", 
           SuperscriptBox["\[Pi]", "2"]}], 
          RowBox[{
           SuperscriptBox["\[Pi]", "2"], " ", "\[Lambda]"}]]}]}], "}"}]}], 
     "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.517089889153503*^9, 3.5170898948991957`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{
          RowBox[{"6", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "EulerGamma"}], ")"}], "2"]}], "+", 
          SuperscriptBox["\[Pi]", "2"]}], 
         RowBox[{"k", " ", 
          SuperscriptBox["\[Pi]", "2"]}]]}], ",", 
       FractionBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "EulerGamma"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"6", " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "EulerGamma"}], ")"}], "2"]}], "+", 
           SuperscriptBox["\[Pi]", "2"]}], ")"}], " ", "\[Lambda]"}], 
        RowBox[{
         SuperscriptBox["k", "3"], " ", 
         SuperscriptBox["\[Pi]", "2"]}]]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"6", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "EulerGamma"}], ")"}], " ", "k"}], 
         RowBox[{
          SuperscriptBox["\[Pi]", "2"], " ", "\[Lambda]"}]]}], ",", 
       FractionBox[
        RowBox[{
         RowBox[{"6", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "EulerGamma"}], ")"}], "2"]}], "+", 
         SuperscriptBox["\[Pi]", "2"]}], 
        RowBox[{"k", " ", 
         SuperscriptBox["\[Pi]", "2"]}]]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"6", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "EulerGamma"}], ")"}], " ", "k"}], 
         RowBox[{
          SuperscriptBox["\[Pi]", "2"], " ", "\[Lambda]"}]]}], ",", 
       FractionBox[
        RowBox[{
         RowBox[{"6", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "EulerGamma"}], ")"}], "2"]}], "+", 
         SuperscriptBox["\[Pi]", "2"]}], 
        RowBox[{"k", " ", 
         SuperscriptBox["\[Pi]", "2"]}]]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"6", " ", 
          SuperscriptBox["k", "3"]}], 
         RowBox[{
          SuperscriptBox["\[Pi]", "2"], " ", 
          SuperscriptBox["\[Lambda]", "2"]}]]}], ",", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{
          RowBox[{"6", " ", "k"}], "-", 
          RowBox[{"6", " ", "EulerGamma", " ", "k"}], "+", 
          SuperscriptBox["\[Pi]", "2"]}], 
         RowBox[{
          SuperscriptBox["\[Pi]", "2"], " ", "\[Lambda]"}]]}]}], "}"}]}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.517089896234098*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[CapitalGamma]\[Alpha]", "=", 
  RowBox[{"AlphaCoefficients", "[", 
   RowBox[{
   "distribution", ",", "g", ",", "pdfCoords", ",", "pdfAssumptions", ",", 
    "pdfIntegrationLimits"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.508161677686858*^9, 3.5081617160500526`*^9}, {
   3.5081617569623923`*^9, 3.508161768299041*^9}, {3.5081618312306404`*^9, 
   3.508161832937738*^9}, {3.508163468308276*^9, 3.5081634695833488`*^9}, {
   3.50816371157419*^9, 3.5081637119222097`*^9}, {3.508164050825594*^9, 
   3.5081640527947063`*^9}, {3.5081640942480774`*^9, 
   3.5081641266599317`*^9}, {3.5081642572334003`*^9, 3.5081642578254337`*^9}, 
   3.5083830862114744`*^9, {3.5083869321874514`*^9, 3.508386933402521*^9}, {
   3.508387222609063*^9, 3.508387238624979*^9}, {3.5083882889110518`*^9, 
   3.5083882891540656`*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"{", 
       RowBox[{
        FractionBox[
         RowBox[{"k", " ", 
          RowBox[{"(", 
           RowBox[{"\[Alpha]", "-", "1"}], ")"}], " ", 
          TemplateBox[{"2","k"},
           "PolyGamma2"]}], 
         RowBox[{"2", "-", 
          RowBox[{"2", " ", "k", " ", 
           TemplateBox[{"1","k"},
            "PolyGamma2"]}]}]], ",", 
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{"\[Alpha]", "-", "1"}], ")"}], " ", "\[Theta]", " ", 
          TemplateBox[{"2","k"},
           "PolyGamma2"]}], 
         RowBox[{
          RowBox[{"2", " ", "k", " ", 
           TemplateBox[{"1","k"},
            "PolyGamma2"]}], "-", "2"}]]}], "}"}], 
      RowBox[{"{", 
       RowBox[{
        FractionBox[
         RowBox[{"1", "-", "\[Alpha]"}], 
         RowBox[{
          RowBox[{"2", " ", "\[Theta]"}], "-", 
          RowBox[{"2", " ", "k", " ", "\[Theta]", " ", 
           TemplateBox[{"1","k"},
            "PolyGamma2"]}]}]], ",", 
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{"\[Alpha]", "-", "1"}], ")"}], " ", 
          TemplateBox[{"1","k"},
           "PolyGamma2"]}], 
         RowBox[{"2", "-", 
          RowBox[{"2", " ", "k", " ", 
           TemplateBox[{"1","k"},
            "PolyGamma2"]}]}]]}], "}"}]},
     {
      RowBox[{"{", 
       RowBox[{
        FractionBox[
         RowBox[{"1", "-", "\[Alpha]"}], 
         RowBox[{
          RowBox[{"2", " ", "\[Theta]"}], "-", 
          RowBox[{"2", " ", "k", " ", "\[Theta]", " ", 
           TemplateBox[{"1","k"},
            "PolyGamma2"]}]}]], ",", 
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{"\[Alpha]", "-", "1"}], ")"}], " ", 
          TemplateBox[{"1","k"},
           "PolyGamma2"]}], 
         RowBox[{"2", "-", 
          RowBox[{"2", " ", "k", " ", 
           TemplateBox[{"1","k"},
            "PolyGamma2"]}]}]]}], "}"}], 
      RowBox[{"{", 
       RowBox[{
        FractionBox[
         RowBox[{"k", " ", 
          RowBox[{"(", 
           RowBox[{"\[Alpha]", "-", "1"}], ")"}]}], 
         RowBox[{"2", " ", 
          SuperscriptBox["\[Theta]", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"k", " ", 
             TemplateBox[{"1","k"},
              "PolyGamma2"]}], "-", "1"}], ")"}]}]], ",", 
        FractionBox[
         RowBox[{"\[Alpha]", "-", 
          RowBox[{"2", " ", "k", " ", 
           RowBox[{"(", 
            RowBox[{"\[Alpha]", "+", "1"}], ")"}], " ", 
           TemplateBox[{"1","k"},
            "PolyGamma2"]}], "+", "3"}], 
         RowBox[{"2", " ", "\[Theta]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"k", " ", 
             TemplateBox[{"1","k"},
              "PolyGamma2"]}], "-", "1"}], ")"}]}]]}], "}"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{
  3.5081618059461946`*^9, 3.508161876063205*^9, 3.508161940971917*^9, 
   3.508162033113188*^9, 3.5081624585565214`*^9, 3.5081628694340224`*^9, 
   3.508163288855012*^9, 3.508163473464571*^9, 3.508163571611184*^9, {
   3.5081636066681895`*^9, 3.508163626899347*^9}, 3.50816370423577*^9, 
   3.5081637543636374`*^9, 3.5081639585073137`*^9, 3.508164057138955*^9, 
   3.508164098924345*^9, 3.5081641291120715`*^9, 3.508164283362894*^9, 
   3.5083788220045757`*^9, 3.508383176102616*^9, 3.50838695715788*^9, 
   3.5083873656682453`*^9, 3.508387992232083*^9, 3.5083882797145257`*^9, 
   3.5083883580030036`*^9, 3.5083884155352945`*^9, 3.5083891923877277`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"\[CapitalGamma]\[Alpha]", "/.", 
  RowBox[{"{", 
   RowBox[{"\[Alpha]", "\[Rule]", "0"}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"\[CapitalGamma]\[Alpha]", "/.", 
  RowBox[{"{", 
   RowBox[{"\[Alpha]", "\[Rule]", "1"}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"\[CapitalGamma]\[Alpha]", "/.", 
  RowBox[{"{", 
   RowBox[{"\[Alpha]", "\[Rule]", 
    RowBox[{"-", "1"}]}], "}"}]}]}], "Input",
 CellChangeTimes->{{3.5083869726087637`*^9, 3.5083869903547783`*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", 
         FractionBox[
          RowBox[{"k", " ", 
           TemplateBox[{"2","k"},
            "PolyGamma2"]}], 
          RowBox[{"2", "-", 
           RowBox[{"2", " ", "k", " ", 
            TemplateBox[{"1","k"},
             "PolyGamma2"]}]}]]}], ",", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{"\[Theta]", " ", 
           TemplateBox[{"2","k"},
            "PolyGamma2"]}], 
          RowBox[{
           RowBox[{"2", " ", "k", " ", 
            TemplateBox[{"1","k"},
             "PolyGamma2"]}], "-", "2"}]]}]}], "}"}], 
      RowBox[{"{", 
       RowBox[{
        FractionBox["1", 
         RowBox[{
          RowBox[{"2", " ", "\[Theta]"}], "-", 
          RowBox[{"2", " ", "k", " ", "\[Theta]", " ", 
           TemplateBox[{"1","k"},
            "PolyGamma2"]}]}]], ",", 
        RowBox[{"-", 
         FractionBox[
          TemplateBox[{"1","k"},
           "PolyGamma2"], 
          RowBox[{"2", "-", 
           RowBox[{"2", " ", "k", " ", 
            TemplateBox[{"1","k"},
             "PolyGamma2"]}]}]]}]}], "}"}]},
     {
      RowBox[{"{", 
       RowBox[{
        FractionBox["1", 
         RowBox[{
          RowBox[{"2", " ", "\[Theta]"}], "-", 
          RowBox[{"2", " ", "k", " ", "\[Theta]", " ", 
           TemplateBox[{"1","k"},
            "PolyGamma2"]}]}]], ",", 
        RowBox[{"-", 
         FractionBox[
          TemplateBox[{"1","k"},
           "PolyGamma2"], 
          RowBox[{"2", "-", 
           RowBox[{"2", " ", "k", " ", 
            TemplateBox[{"1","k"},
             "PolyGamma2"]}]}]]}]}], "}"}], 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["k", 
          RowBox[{"2", " ", 
           SuperscriptBox["\[Theta]", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"k", " ", 
              TemplateBox[{"1","k"},
               "PolyGamma2"]}], "-", "1"}], ")"}]}]]}], ",", 
        FractionBox[
         RowBox[{"3", "-", 
          RowBox[{"2", " ", "k", " ", 
           TemplateBox[{"1","k"},
            "PolyGamma2"]}]}], 
         RowBox[{"2", " ", "\[Theta]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"k", " ", 
             TemplateBox[{"1","k"},
              "PolyGamma2"]}], "-", "1"}], ")"}]}]]}], "}"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{3.508386991030817*^9, 3.50838737029251*^9, 
  3.5083884156403008`*^9, 3.5083891925767384`*^9}],

Cell[BoxData[
 FormBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}], 
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}]},
     {
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}], 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        FractionBox[
         RowBox[{"4", "-", 
          RowBox[{"4", " ", "k", " ", 
           TemplateBox[{"1","k"},
            "PolyGamma2"]}]}], 
         RowBox[{"2", " ", "\[Theta]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"k", " ", 
             TemplateBox[{"1","k"},
              "PolyGamma2"]}], "-", "1"}], ")"}]}]]}], "}"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{3.508386991030817*^9, 3.50838737029251*^9, 
  3.5083884156403008`*^9, 3.5083891926247416`*^9}],

Cell[BoxData[
 FormBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", 
         FractionBox[
          RowBox[{"2", " ", "k", " ", 
           TemplateBox[{"2","k"},
            "PolyGamma2"]}], 
          RowBox[{"2", "-", 
           RowBox[{"2", " ", "k", " ", 
            TemplateBox[{"1","k"},
             "PolyGamma2"]}]}]]}], ",", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{"2", " ", "\[Theta]", " ", 
           TemplateBox[{"2","k"},
            "PolyGamma2"]}], 
          RowBox[{
           RowBox[{"2", " ", "k", " ", 
            TemplateBox[{"1","k"},
             "PolyGamma2"]}], "-", "2"}]]}]}], "}"}], 
      RowBox[{"{", 
       RowBox[{
        FractionBox["2", 
         RowBox[{
          RowBox[{"2", " ", "\[Theta]"}], "-", 
          RowBox[{"2", " ", "k", " ", "\[Theta]", " ", 
           TemplateBox[{"1","k"},
            "PolyGamma2"]}]}]], ",", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{"2", " ", 
           TemplateBox[{"1","k"},
            "PolyGamma2"]}], 
          RowBox[{"2", "-", 
           RowBox[{"2", " ", "k", " ", 
            TemplateBox[{"1","k"},
             "PolyGamma2"]}]}]]}]}], "}"}]},
     {
      RowBox[{"{", 
       RowBox[{
        FractionBox["2", 
         RowBox[{
          RowBox[{"2", " ", "\[Theta]"}], "-", 
          RowBox[{"2", " ", "k", " ", "\[Theta]", " ", 
           TemplateBox[{"1","k"},
            "PolyGamma2"]}]}]], ",", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{"2", " ", 
           TemplateBox[{"1","k"},
            "PolyGamma2"]}], 
          RowBox[{"2", "-", 
           RowBox[{"2", " ", "k", " ", 
            TemplateBox[{"1","k"},
             "PolyGamma2"]}]}]]}]}], "}"}], 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["k", 
          RowBox[{
           SuperscriptBox["\[Theta]", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"k", " ", 
              TemplateBox[{"1","k"},
               "PolyGamma2"]}], "-", "1"}], ")"}]}]]}], ",", 
        FractionBox["1", 
         RowBox[{"\[Theta]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"k", " ", 
             TemplateBox[{"1","k"},
              "PolyGamma2"]}], "-", "1"}], ")"}]}]]}], "}"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{3.508386991030817*^9, 3.50838737029251*^9, 
  3.5083884156403008`*^9, 3.5083891926867447`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Ruplijk", "=", 
  RowBox[{"RiemannTensor1", "[", 
   RowBox[{"\[CapitalGamma]", ",", "pdfCoords"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.508378845277907*^9, 3.5083789120567265`*^9}, {
   3.5083817928304973`*^9, 3.5083817991808605`*^9}, {3.5083818674217634`*^9, 
   3.508381910795244*^9}, 3.5083831145890975`*^9, 3.508387248768559*^9, 
   3.5170898322761507`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", 
         FractionBox[
          RowBox[{"6", "-", 
           RowBox[{"6", " ", "EulerGamma"}]}], 
          RowBox[{
           SuperscriptBox["\[Pi]", "2"], " ", "\[Lambda]"}]]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         FractionBox[
          RowBox[{"6", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "EulerGamma"}], ")"}]}], 
          RowBox[{
           SuperscriptBox["\[Pi]", "2"], " ", "\[Lambda]"}]], ",", "0"}], 
        "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{"-", 
          FractionBox[
           RowBox[{"6", " ", 
            SuperscriptBox["k", "2"]}], 
           RowBox[{
            SuperscriptBox["\[Pi]", "2"], " ", 
            SuperscriptBox["\[Lambda]", "2"]}]]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         FractionBox[
          RowBox[{"6", " ", 
           SuperscriptBox["k", "2"]}], 
          RowBox[{
           SuperscriptBox["\[Pi]", "2"], " ", 
           SuperscriptBox["\[Lambda]", "2"]}]], ",", "0"}], "}"}]}], "}"}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", 
         FractionBox[
          RowBox[{
           RowBox[{"6", " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "EulerGamma"}], ")"}], "2"]}], "+", 
           SuperscriptBox["\[Pi]", "2"]}], 
          RowBox[{
           SuperscriptBox["k", "2"], " ", 
           SuperscriptBox["\[Pi]", "2"]}]]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", 
          FractionBox[
           RowBox[{
            RowBox[{"6", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "EulerGamma"}], ")"}], "2"]}], "+", 
            SuperscriptBox["\[Pi]", "2"]}], 
           RowBox[{
            SuperscriptBox["k", "2"], " ", 
            SuperscriptBox["\[Pi]", "2"]}]]}], ",", "0"}], "}"}]}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", 
         FractionBox[
          RowBox[{"6", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "EulerGamma"}], ")"}]}], 
          RowBox[{
           SuperscriptBox["\[Pi]", "2"], " ", "\[Lambda]"}]]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         FractionBox[
          RowBox[{"6", "-", 
           RowBox[{"6", " ", "EulerGamma"}]}], 
          RowBox[{
           SuperscriptBox["\[Pi]", "2"], " ", "\[Lambda]"}]], ",", "0"}], 
        "}"}]}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.508378917316027*^9, 3.5083818049861927`*^9, {3.5083818754452224`*^9, 
   3.5083819115242863`*^9}, 3.508383181542927*^9, 3.5083873780909557`*^9, 
   3.508388415790309*^9, 3.5083891934687896`*^9, 3.517089833111817*^9, 
   3.517089903459577*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Rdownlijk", "=", 
  RowBox[{"RiemannTensor2", "[", 
   RowBox[{"\[CapitalGamma]", ",", "g", ",", "pdfCoords"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.5083818120065937`*^9, 3.508381820768095*^9}, {
   3.5083819135744033`*^9, 3.5083819339395685`*^9}, {3.508381965916397*^9, 
   3.5083820142041593`*^9}, 3.5083831184843206`*^9, {3.5083870883643847`*^9, 
   3.508387089732463*^9}, {3.5083872539708567`*^9, 3.5083872708628225`*^9}, {
   3.5083893280764885`*^9, 3.5083893523228755`*^9}, 3.5170899108107023`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{"-", 
          FractionBox["1", 
           SuperscriptBox["\[Lambda]", "2"]]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         FractionBox["1", 
          SuperscriptBox["\[Lambda]", "2"]], ",", "0"}], "}"}]}], "}"}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", 
         FractionBox["1", 
          SuperscriptBox["\[Lambda]", "2"]]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["1", 
           SuperscriptBox["\[Lambda]", "2"]]}], ",", "0"}], "}"}]}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.508382017140327*^9, 3.5083831871592484`*^9, 3.508387383037239*^9, 
   3.5083884177064185`*^9, 3.5083892377963247`*^9, {3.5083893353869066`*^9, 
   3.50838935327293*^9}, 3.5170899117948837`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Rij", "=", 
  RowBox[{"RicciTensor", "[", 
   RowBox[{"Ruplijk", ",", "pdfCoords"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.5083800837837453`*^9, 3.5083801219669294`*^9}, 
   3.5083831292249346`*^9, {3.5083832180520153`*^9, 3.5083832435284724`*^9}, 
   3.508387275939113*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{
        RowBox[{"6", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "EulerGamma"}], ")"}], "2"]}], "+", 
        SuperscriptBox["\[Pi]", "2"]}], 
       RowBox[{
        SuperscriptBox["k", "2"], " ", 
        SuperscriptBox["\[Pi]", "2"]}]]}], ",", 
     FractionBox[
      RowBox[{"6", "-", 
       RowBox[{"6", " ", "EulerGamma"}]}], 
      RowBox[{
       SuperscriptBox["\[Pi]", "2"], " ", "\[Lambda]"}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"6", "-", 
       RowBox[{"6", " ", "EulerGamma"}]}], 
      RowBox[{
       SuperscriptBox["\[Pi]", "2"], " ", "\[Lambda]"}]], ",", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"6", " ", 
        SuperscriptBox["k", "2"]}], 
       RowBox[{
        SuperscriptBox["\[Pi]", "2"], " ", 
        SuperscriptBox["\[Lambda]", "2"]}]]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.5083801243480654`*^9, 3.5083801398829536`*^9}, 
   3.508380259191778*^9, 3.5083803540952063`*^9, 3.508380385859023*^9, 
   3.50838062655479*^9, 3.508380682607996*^9, 3.5083808406640368`*^9, 
   3.508380951548379*^9, 3.508381049288969*^9, 3.5083811262663717`*^9, 
   3.5083831910954733`*^9, {3.508383229983698*^9, 3.5083832442965164`*^9}, 
   3.508387388236536*^9, 3.508388417841426*^9, 3.508389362028431*^9, 
   3.517089920943494*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"R", "=", 
  RowBox[{"ScalarCurvature", "[", 
   RowBox[{"Rij", ",", "g", ",", "pdfCoords"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.5083827350573893`*^9, 3.5083827629909873`*^9}, {
   3.508382811539764*^9, 3.5083828142109165`*^9}, 3.5083831362843385`*^9, {
   3.5083835339340825`*^9, 3.508383534684126*^9}, 3.508387282017461*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    RowBox[{"12", " ", 
     RowBox[{"(", 
      RowBox[{"6", "-", 
       RowBox[{"6", " ", "EulerGamma"}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "EulerGamma"}], ")"}]}], 
    SuperscriptBox["\[Pi]", "4"]]}], "-", 
  FractionBox[
   RowBox[{"12", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"6", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "EulerGamma"}], ")"}], "2"]}], "+", 
      SuperscriptBox["\[Pi]", "2"]}], ")"}]}], 
   SuperscriptBox["\[Pi]", "4"]]}]], "Output",
 CellChangeTimes->{3.5083827665421906`*^9, 3.508382815361983*^9, 
  3.5083832522259703`*^9, 3.5083835353721647`*^9, 3.5083873906026716`*^9, 
  3.5083884178884287`*^9, 3.5083893658196473`*^9, 3.517089924530573*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"R", "//", "N"}]], "Input",
 CellChangeTimes->{{3.5170899395698957`*^9, 3.517089940895179*^9}}],

Cell[BoxData[
 RowBox[{"-", "1.2158542037080533`"}]], "Output",
 CellChangeTimes->{3.5170899417092247`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"R", "\[Equal]", "0"}], ",", 
   RowBox[{"{", "\[Alpha]", "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.508389579270856*^9, 3.508389592208596*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\[Alpha]", "\[Rule]", 
      RowBox[{"-", "1"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Alpha]", "\[Rule]", "1"}], "}"}]}], "}"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{3.5083895931106477`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"geodesics", "=", 
  RowBox[{"EulerLagrangeEquations", "[", 
   RowBox[{"\[CapitalGamma]", ",", "pdfCoords", ",", "t"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.5083830342004995`*^9, 3.5083830400888367`*^9}, {
   3.5083832648966947`*^9, 3.5083832882220287`*^9}, {3.5083835542682457`*^9, 
   3.5083835608446217`*^9}, 3.5083872881328106`*^9, 3.517090875605156*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     RowBox[{
      FractionBox["1", 
       RowBox[{"k", " ", 
        SuperscriptBox["\[Pi]", "2"], " ", 
        SuperscriptBox["\[Lambda]", "2"]}]], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"6", " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "EulerGamma"}], ")"}], "2"]}], "+", 
           SuperscriptBox["\[Pi]", "2"]}], ")"}], " ", 
         SuperscriptBox["\[Lambda]", "2"], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["k", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
        RowBox[{"12", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "EulerGamma"}], ")"}], " ", 
         SuperscriptBox["k", "2"], " ", "\[Lambda]", " ", 
         RowBox[{
          SuperscriptBox["k", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Lambda]", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"6", " ", 
         SuperscriptBox["k", "4"], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Lambda]", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}]}], ")"}]}]}], 
    "+", 
    RowBox[{
     SuperscriptBox["k", "\[Prime]\[Prime]",
      MultilineFunction->None], "[", "t", "]"}]}], ",", 
   RowBox[{
    RowBox[{
     FractionBox["1", 
      RowBox[{
       SuperscriptBox["k", "3"], " ", 
       SuperscriptBox["\[Pi]", "2"], " ", "\[Lambda]"}]], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "EulerGamma"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"6", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "EulerGamma"}], ")"}], "2"]}], "+", 
          SuperscriptBox["\[Pi]", "2"]}], ")"}], " ", 
        SuperscriptBox["\[Lambda]", "2"], " ", 
        SuperscriptBox[
         RowBox[{
          SuperscriptBox["k", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
       RowBox[{"2", " ", 
        SuperscriptBox["k", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"6", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "EulerGamma"}], ")"}], "2"]}], "+", 
          SuperscriptBox["\[Pi]", "2"]}], ")"}], " ", "\[Lambda]", " ", 
        RowBox[{
         SuperscriptBox["k", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}], " ", 
        RowBox[{
         SuperscriptBox["\[Lambda]", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["k", "3"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"6", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "EulerGamma"}], ")"}], " ", "k"}], "-", 
          SuperscriptBox["\[Pi]", "2"]}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{
          SuperscriptBox["\[Lambda]", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], "2"]}]}], ")"}]}], "+", 
    RowBox[{
     SuperscriptBox["\[Lambda]", "\[Prime]\[Prime]",
      MultilineFunction->None], "[", "t", "]"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.508383303783919*^9, 3.5083835622377014`*^9, 
  3.508387392554783*^9, 3.5083884182394485`*^9, 3.508389373956113*^9, 
  3.517090877595571*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      RowBox[{
       FractionBox["1", 
        RowBox[{"k", " ", 
         SuperscriptBox["\[Pi]", "2"], " ", 
         SuperscriptBox["\[Lambda]", "2"]}]], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"6", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "EulerGamma"}], ")"}], "2"]}], "+", 
            SuperscriptBox["\[Pi]", "2"]}], ")"}], " ", 
          SuperscriptBox["\[Lambda]", "2"], " ", 
          SuperscriptBox[
           RowBox[{
            SuperscriptBox["k", "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
         RowBox[{"12", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "EulerGamma"}], ")"}], " ", 
          SuperscriptBox["k", "2"], " ", "\[Lambda]", " ", 
          RowBox[{
           SuperscriptBox["k", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], " ", 
          RowBox[{
           SuperscriptBox["\[Lambda]", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}]}], "+", 
         RowBox[{"6", " ", 
          SuperscriptBox["k", "4"], " ", 
          SuperscriptBox[
           RowBox[{
            SuperscriptBox["\[Lambda]", "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}], "2"]}]}], ")"}]}]}], 
     "+", 
     RowBox[{
      SuperscriptBox["k", "\[Prime]\[Prime]",
       MultilineFunction->None], "[", "t", "]"}]}], ",", 
    RowBox[{
     RowBox[{
      FractionBox["1", 
       RowBox[{
        SuperscriptBox["k", "3"], " ", 
        SuperscriptBox["\[Pi]", "2"], " ", "\[Lambda]"}]], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "EulerGamma"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"6", " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "EulerGamma"}], ")"}], "2"]}], "+", 
           SuperscriptBox["\[Pi]", "2"]}], ")"}], " ", 
         SuperscriptBox["\[Lambda]", "2"], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["k", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
        RowBox[{"2", " ", 
         SuperscriptBox["k", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"6", " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "EulerGamma"}], ")"}], "2"]}], "+", 
           SuperscriptBox["\[Pi]", "2"]}], ")"}], " ", "\[Lambda]", " ", 
         RowBox[{
          SuperscriptBox["k", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Lambda]", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{
         SuperscriptBox["k", "3"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"6", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "EulerGamma"}], ")"}], " ", "k"}], "-", 
           SuperscriptBox["\[Pi]", "2"]}], ")"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Lambda]", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}]}], ")"}]}], "+", 
     RowBox[{
      SuperscriptBox["\[Lambda]", "\[Prime]\[Prime]",
       MultilineFunction->None], "[", "t", "]"}]}]}], "}"}], "//", 
  "TraditionalForm"}]], "Input",
 CellChangeTimes->{{3.52001542741453*^9, 3.520015436521118*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{
      SuperscriptBox["k", "\[Prime]\[Prime]",
       MultilineFunction->None], "(", "t", ")"}], "-", 
     FractionBox[
      RowBox[{
       RowBox[{"6", " ", 
        SuperscriptBox["k", "4"], " ", 
        SuperscriptBox[
         RowBox[{
          SuperscriptBox["\[Lambda]", "\[Prime]",
           MultilineFunction->None], "(", "t", ")"}], "2"]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"6", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              TagBox["\[DoubledGamma]",
               Function[{}, EulerGamma]], "-", "1"}], ")"}], "2"]}], "+", 
          SuperscriptBox["\[Pi]", "2"]}], ")"}], " ", 
        SuperscriptBox["\[Lambda]", "2"], " ", 
        SuperscriptBox[
         RowBox[{
          SuperscriptBox["k", "\[Prime]",
           MultilineFunction->None], "(", "t", ")"}], "2"]}], "+", 
       RowBox[{"12", " ", 
        RowBox[{"(", 
         RowBox[{
          TagBox["\[DoubledGamma]",
           Function[{}, EulerGamma]], "-", "1"}], ")"}], " ", "\[Lambda]", 
        " ", 
        SuperscriptBox["k", "2"], " ", 
        RowBox[{
         SuperscriptBox["k", "\[Prime]",
          MultilineFunction->None], "(", "t", ")"}], " ", 
        RowBox[{
         SuperscriptBox["\[Lambda]", "\[Prime]",
          MultilineFunction->None], "(", "t", ")"}]}]}], 
      RowBox[{
       SuperscriptBox["\[Pi]", "2"], " ", "k", " ", 
       SuperscriptBox["\[Lambda]", "2"]}]]}], ",", 
    RowBox[{
     RowBox[{
      FractionBox["1", 
       RowBox[{
        SuperscriptBox["\[Pi]", "2"], " ", 
        SuperscriptBox["k", "3"], " ", "\[Lambda]"}]], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"6", " ", 
            RowBox[{"(", 
             RowBox[{
              TagBox["\[DoubledGamma]",
               Function[{}, EulerGamma]], "-", "1"}], ")"}], " ", "k"}], "-", 
           SuperscriptBox["\[Pi]", "2"]}], ")"}], " ", 
         SuperscriptBox["k", "3"], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Lambda]", "\[Prime]",
            MultilineFunction->None], "(", "t", ")"}], "2"]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           TagBox["\[DoubledGamma]",
            Function[{}, EulerGamma]], "-", "1"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"6", " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               TagBox["\[DoubledGamma]",
                Function[{}, EulerGamma]], "-", "1"}], ")"}], "2"]}], "+", 
           SuperscriptBox["\[Pi]", "2"]}], ")"}], " ", 
         SuperscriptBox["\[Lambda]", "2"], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["k", "\[Prime]",
            MultilineFunction->None], "(", "t", ")"}], "2"]}], "+", 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"6", " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               TagBox["\[DoubledGamma]",
                Function[{}, EulerGamma]], "-", "1"}], ")"}], "2"]}], "+", 
           SuperscriptBox["\[Pi]", "2"]}], ")"}], " ", "\[Lambda]", " ", 
         SuperscriptBox["k", "2"], " ", 
         RowBox[{
          SuperscriptBox["k", "\[Prime]",
           MultilineFunction->None], "(", "t", ")"}], " ", 
         RowBox[{
          SuperscriptBox["\[Lambda]", "\[Prime]",
           MultilineFunction->None], "(", "t", ")"}]}]}], ")"}]}], "+", 
     RowBox[{
      SuperscriptBox["\[Lambda]", "\[Prime]\[Prime]",
       MultilineFunction->None], "(", "t", ")"}]}]}], "}"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{{3.5200154313815813`*^9, 3.520015437149881*^9}}]
}, Open  ]],

Cell[TextData[Cell[BoxData[{
 FormBox[
  RowBox[{
   OverscriptBox["k", ".."], "=", 
   FractionBox[
    RowBox[{
     RowBox[{"6", " ", 
      SuperscriptBox["k", "4"], " ", 
      SuperscriptBox[
       OverscriptBox["\[Lambda]", "."], "2"]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"6", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            TagBox["\[DoubledGamma]",
             Function[{}, EulerGamma]], "-", "1"}], ")"}], "2"]}], "+", 
        SuperscriptBox["\[Pi]", "2"]}], ")"}], " ", 
      SuperscriptBox["\[Lambda]", "2"], " ", 
      SuperscriptBox[
       OverscriptBox["k", "."], "2"]}], "+", 
     RowBox[{"12", " ", 
      RowBox[{"(", 
       RowBox[{
        TagBox["\[DoubledGamma]",
         Function[{}, EulerGamma]], "-", "1"}], ")"}], " ", "\[Lambda]", " ", 
      SuperscriptBox["k", "2"], " ", 
      OverscriptBox["k", "."], " ", 
      OverscriptBox["\[Lambda]", "."]}]}], 
    RowBox[{
     SuperscriptBox["\[Pi]", "2"], " ", "k", " ", 
     SuperscriptBox["\[Lambda]", "2"]}]]}], 
  TraditionalForm], "\[IndentingNewLine]", 
 FormBox[
  RowBox[{
   OverscriptBox["\[Lambda]", ".."], "=", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"6", " ", 
          RowBox[{"(", 
           RowBox[{
            TagBox["\[DoubledGamma]",
             Function[{}, EulerGamma]], "-", "1"}], ")"}], " ", "k"}], "-", 
         SuperscriptBox["\[Pi]", "2"]}], ")"}], " ", 
       SuperscriptBox["k", "3"], " ", 
       SuperscriptBox[
        OverscriptBox["\[Lambda]", "."], "2"]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         TagBox["\[DoubledGamma]",
          Function[{}, EulerGamma]], "-", "1"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"6", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             TagBox["\[DoubledGamma]",
              Function[{}, EulerGamma]], "-", "1"}], ")"}], "2"]}], "+", 
         SuperscriptBox["\[Pi]", "2"]}], ")"}], " ", 
       SuperscriptBox["\[Lambda]", "2"], " ", 
       SuperscriptBox[
        OverscriptBox["k", "."], "2"]}], "+", 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"6", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             TagBox["\[DoubledGamma]",
              Function[{}, EulerGamma]], "-", "1"}], ")"}], "2"]}], "+", 
         SuperscriptBox["\[Pi]", "2"]}], ")"}], " ", "\[Lambda]", " ", 
       SuperscriptBox["k", "2"], " ", 
       OverscriptBox["k", "."], " ", 
       OverscriptBox["\[Lambda]", "."]}]}], 
     RowBox[{
      SuperscriptBox["\[Pi]", "2"], " ", 
      SuperscriptBox["k", "3"], " ", "\[Lambda]"}]]}]}], TraditionalForm]}],
 FormatType->"TraditionalForm"]], "Text",
 CellChangeTimes->{{3.5200155048087273`*^9, 3.520015618218049*^9}, {
  3.520015953352723*^9, 3.520015956914769*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sol", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"NDSolve", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            FractionBox["1", 
             RowBox[{
              RowBox[{"k", "[", "t", "]"}], " ", 
              SuperscriptBox["\[Pi]", "2"], " ", 
              SuperscriptBox[
               RowBox[{"\[Lambda]", "[", "t", "]"}], "2"]}]]}], 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"6", " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", "EulerGamma"}], ")"}], "2"]}], 
                "+", 
                SuperscriptBox["\[Pi]", "2"]}], ")"}], " ", 
              SuperscriptBox[
               RowBox[{"\[Lambda]", "[", "t", "]"}], "2"], " ", 
              SuperscriptBox[
               RowBox[{
                SuperscriptBox["k", "\[Prime]",
                 MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
             RowBox[{"12", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "EulerGamma"}], ")"}], " ", 
              SuperscriptBox[
               RowBox[{"k", "[", "t", "]"}], "2"], " ", 
              RowBox[{"\[Lambda]", "[", "t", "]"}], " ", 
              RowBox[{
               SuperscriptBox["k", "\[Prime]",
                MultilineFunction->None], "[", "t", "]"}], " ", 
              RowBox[{
               SuperscriptBox["\[Lambda]", "\[Prime]",
                MultilineFunction->None], "[", "t", "]"}]}], "+", 
             RowBox[{"6", " ", 
              SuperscriptBox[
               RowBox[{"k", "[", "t", "]"}], "4"], " ", 
              SuperscriptBox[
               RowBox[{
                SuperscriptBox["\[Lambda]", "\[Prime]",
                 MultilineFunction->None], "[", "t", "]"}], "2"]}]}], ")"}]}],
           "+", 
          RowBox[{
           SuperscriptBox["k", "\[Prime]\[Prime]",
            MultilineFunction->None], "[", "t", "]"}]}], "\[Equal]", "0"}], 
        ",", 
        RowBox[{
         RowBox[{
          RowBox[{
           FractionBox["1", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"k", "[", "t", "]"}], "3"], " ", 
             SuperscriptBox["\[Pi]", "2"], " ", 
             RowBox[{"\[Lambda]", "[", "t", "]"}]}]], 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "EulerGamma"}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"6", " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", "EulerGamma"}], ")"}], "2"]}], 
                "+", 
                SuperscriptBox["\[Pi]", "2"]}], ")"}], " ", 
              SuperscriptBox[
               RowBox[{"\[Lambda]", "[", "t", "]"}], "2"], " ", 
              SuperscriptBox[
               RowBox[{
                SuperscriptBox["k", "\[Prime]",
                 MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
             RowBox[{"2", " ", 
              SuperscriptBox[
               RowBox[{"k", "[", "t", "]"}], "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"6", " ", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", "EulerGamma"}], ")"}], "2"]}], 
                "+", 
                SuperscriptBox["\[Pi]", "2"]}], ")"}], " ", 
              RowBox[{"\[Lambda]", "[", "t", "]"}], " ", 
              RowBox[{
               SuperscriptBox["k", "\[Prime]",
                MultilineFunction->None], "[", "t", "]"}], " ", 
              RowBox[{
               SuperscriptBox["\[Lambda]", "\[Prime]",
                MultilineFunction->None], "[", "t", "]"}]}], "+", 
             RowBox[{
              SuperscriptBox[
               RowBox[{"k", "[", "t", "]"}], "3"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"6", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", "EulerGamma"}], ")"}], " ", 
                 RowBox[{"k", "[", "t", "]"}]}], "-", 
                SuperscriptBox["\[Pi]", "2"]}], ")"}], " ", 
              SuperscriptBox[
               RowBox[{
                SuperscriptBox["\[Lambda]", "\[Prime]",
                 MultilineFunction->None], "[", "t", "]"}], "2"]}]}], ")"}]}],
           "+", 
          RowBox[{
           SuperscriptBox["\[Lambda]", "\[Prime]\[Prime]",
            MultilineFunction->None], "[", "t", "]"}]}], "\[Equal]", "0"}], 
        ",", 
        RowBox[{
         RowBox[{"k", "[", "0", "]"}], "==", "1"}], ",", 
        RowBox[{
         RowBox[{"\[Lambda]", "[", "0", "]"}], "\[Equal]", "i"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"k", "'"}], "[", "0", "]"}], "\[Equal]", "1"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"\[Lambda]", "'"}], "[", "0", "]"}], "\[Equal]", "1"}]}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "\[Lambda]"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", 
        RowBox[{"-", "10"}], ",", "10"}], "}"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", "6"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.52001683708235*^9, 3.520017056402404*^9}, {
  3.520017131657234*^9, 3.5200171452557373`*^9}, {3.520017188552178*^9, 
  3.5200171890092154`*^9}, {3.520017282780781*^9, 3.520017284468371*^9}, {
  3.52001797422539*^9, 3.520018000263431*^9}, {3.520020604113957*^9, 
  3.520020639982747*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"k", "\[Rule]", 
       TagBox[
        RowBox[{"InterpolatingFunction", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "10.`"}], ",", "10.`"}], "}"}], "}"}], 
          ",", "\<\"<>\"\>"}], "]"}],
        False,
        Editable->False]}], ",", 
      RowBox[{"\[Lambda]", "\[Rule]", 
       TagBox[
        RowBox[{"InterpolatingFunction", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "10.`"}], ",", "10.`"}], "}"}], "}"}], 
          ",", "\<\"<>\"\>"}], "]"}],
        False,
        Editable->False]}]}], "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"k", "\[Rule]", 
       TagBox[
        RowBox[{"InterpolatingFunction", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "10.`"}], ",", "10.`"}], "}"}], "}"}], 
          ",", "\<\"<>\"\>"}], "]"}],
        False,
        Editable->False]}], ",", 
      RowBox[{"\[Lambda]", "\[Rule]", 
       TagBox[
        RowBox[{"InterpolatingFunction", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "10.`"}], ",", "10.`"}], "}"}], "}"}], 
          ",", "\<\"<>\"\>"}], "]"}],
        False,
        Editable->False]}]}], "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"k", "\[Rule]", 
       TagBox[
        RowBox[{"InterpolatingFunction", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "10.`"}], ",", "10.`"}], "}"}], "}"}], 
          ",", "\<\"<>\"\>"}], "]"}],
        False,
        Editable->False]}], ",", 
      RowBox[{"\[Lambda]", "\[Rule]", 
       TagBox[
        RowBox[{"InterpolatingFunction", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "10.`"}], ",", "10.`"}], "}"}], "}"}], 
          ",", "\<\"<>\"\>"}], "]"}],
        False,
        Editable->False]}]}], "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"k", "\[Rule]", 
       TagBox[
        RowBox[{"InterpolatingFunction", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "10.`"}], ",", "10.`"}], "}"}], "}"}], 
          ",", "\<\"<>\"\>"}], "]"}],
        False,
        Editable->False]}], ",", 
      RowBox[{"\[Lambda]", "\[Rule]", 
       TagBox[
        RowBox[{"InterpolatingFunction", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "10.`"}], ",", "10.`"}], "}"}], "}"}], 
          ",", "\<\"<>\"\>"}], "]"}],
        False,
        Editable->False]}]}], "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"k", "\[Rule]", 
       TagBox[
        RowBox[{"InterpolatingFunction", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "10.`"}], ",", "10.`"}], "}"}], "}"}], 
          ",", "\<\"<>\"\>"}], "]"}],
        False,
        Editable->False]}], ",", 
      RowBox[{"\[Lambda]", "\[Rule]", 
       TagBox[
        RowBox[{"InterpolatingFunction", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "10.`"}], ",", "10.`"}], "}"}], "}"}], 
          ",", "\<\"<>\"\>"}], "]"}],
        False,
        Editable->False]}]}], "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"k", "\[Rule]", 
       TagBox[
        RowBox[{"InterpolatingFunction", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "10.`"}], ",", "10.`"}], "}"}], "}"}], 
          ",", "\<\"<>\"\>"}], "]"}],
        False,
        Editable->False]}], ",", 
      RowBox[{"\[Lambda]", "\[Rule]", 
       TagBox[
        RowBox[{"InterpolatingFunction", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "10.`"}], ",", "10.`"}], "}"}], "}"}], 
          ",", "\<\"<>\"\>"}], "]"}],
        False,
        Editable->False]}]}], "}"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.520016962606846*^9, {3.520017024710557*^9, 3.520017057896015*^9}, {
   3.52001713581819*^9, 3.520017146275443*^9}, 3.520017189942623*^9, 
   3.5200172850930634`*^9, 3.520018003123008*^9, {3.5200206137119503`*^9, 
   3.520020640694767*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sol", "[", 
  RowBox[{"[", 
   RowBox[{"2", ",", "1"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.520018089388714*^9, 3.5200181207616158`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"k", "\[Rule]", 
    TagBox[
     RowBox[{"InterpolatingFunction", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "10.`"}], ",", "10.`"}], "}"}], "}"}], 
       ",", "\<\"<>\"\>"}], "]"}],
     False,
     Editable->False]}], ",", 
   RowBox[{"\[Lambda]", "\[Rule]", 
    TagBox[
     RowBox[{"InterpolatingFunction", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "10.`"}], ",", "10.`"}], "}"}], "}"}], 
       ",", "\<\"<>\"\>"}], "]"}],
     False,
     Editable->False]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.520018091724947*^9, 3.520018121326441*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pl1", "=", 
  RowBox[{"ParametricPlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"Evaluate", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"k", "[", "t", "]"}], ",", 
         RowBox[{"\[Lambda]", "[", "t", "]"}]}], "}"}], "/.", "sol"}], "]"}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", 
      RowBox[{"-", "2"}], ",", "3"}], "}"}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<k\>\"", ",", "\"\<\[Lambda]\>\""}], "}"}]}], ",", 
    RowBox[{"AxesOrigin", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.52001706747819*^9, 3.520017148979396*^9}, {
  3.5200171920930767`*^9, 3.5200171925403214`*^9}, {3.5200172708356867`*^9, 
  3.520017273946349*^9}, {3.520017514262972*^9, 3.520017556980422*^9}, {
  3.520017833526411*^9, 3.5200178350117893`*^9}, {3.5200180156504297`*^9, 
  3.520018042646357*^9}, {3.520018104769506*^9, 3.5200181870341387`*^9}, {
  3.520018251755368*^9, 3.520018285622262*^9}, {3.520018740141049*^9, 
  3.520018770458912*^9}, {3.520018892131837*^9, 3.520018898948098*^9}, {
  3.520019813631185*^9, 3.520019857032065*^9}, {3.5200206588251657`*^9, 
  3.520020669257481*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
Sz0Xc7Kt0EIT34x7h3D/D8AdzSQ=
     "]], LineBox[CompressedData["
1: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
72A7w/8DyVnQJA==
     "]], LineBox[CompressedData["
1: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
     "]], LineBox[CompressedData["
1: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
RHj5eAYS/h+bzLBp
     "]], LineBox[CompressedData["
1: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
xmiMfYok/D+hHd+e
     "]], LineBox[CompressedData["
1:eJwV13c41W8bAHD8lJWsnGOdc+ydXRK6byWkYSWSWYhCEaJoyCpFaFGJioZV
ViWEqOy9t3NkJaIUhff7/nWuz/U853rG9x7XI3H0lKUbCxMT029mJqb///qv
npUVYK2F1JoHVy+cc8QgTmOpofW1YDnvaeGn7YhbnYf25nLUwvcfN9r5fjlg
4NbtkvY8tUCPMCra5+eAPHJH58ZFauG26/aXF/3t0eQU2nZQasGpct1UylZ7
9Oe4M/tJvBYMciVLjiwdQZe/13KKZGshucLf+dmlI+iW+/fcF41a0BNcy7O9
Y4cWxbMnu7bUAtOdAK+tDna4jUvr5tS2WtitRqp6Km2HiWUZ/hSohf2MTIXN
hYfxpqDS+8K9taC+X76ist8W/U7cf/XKrRaon6Zcygxt0MBQVeA/z1ooWTjg
syhgg5bFRq8Pe9VC7Wab48/ph/DuRpnHAmdq4ZHg2rJ/+CGUV612K75UC+Ut
AgE36qzxwO3l2bYHtUAKK4jK9jmI2vuD9p1IrQXjnUWuPwwPYu8LuxnWp7XQ
w2an8kD0IP7n/XDVKLMW4vtddSRrrXCWxe/U6jti/ckLBa1KVrgcas6j210L
HFSbuVEmS9SPfabi2V8LQ8GqC6K9FmgZqubwYLgWoiasJd/nWyDTJMs032Qt
PLNu85HzsMAQyw3DOsu1kBd34+i9DnO8nj01Fkqpg4FEH4uuK2bIsdP18IpE
HVz/ZOrDsdMM29IVJy/L1sF+f3Olr0xmGLVnvUuyah0wjTPN3b10AM/Vc9Sy
76wDLvKO2udR+9HoyIxh//E6YE6Z/DmftxcTJHzGsr3qICvaY3nx3F7M1N7/
Kty3DkLsr364umsvOsfXfzE4Xwfv4yt2WneaovjGBOpybB383V2w5zCLKbLO
X1ZxfVMHPNm4WO9ngvMKnozokjpY1Tsoz7nLBP0p79ryKupgg/U82wcBExSk
BR0l1dfBn9Lih9eKjPFp07cjYiN1UCT8JzmC2RhvJ5U9lN5QD0YClqXLmbvR
tjr/GPLVw5M7YTnNEbtxbUdStTOpHoaNi4+sOu1GHtZbzrni9dAo0uLuILgb
1//g5ArfUg/3S6xU+cMNsdg9Zp7LuR5MnEtePjy9C487aw36utVD03h+2zWz
Xegmnnam/0Q9eGrAm0qVXbjB3/rRh4B6eLp+4B3P953o2IECZTH18OXimdOc
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
ae4=
     "]]}},
  Axes->True,
  AxesLabel->{
    FormBox["\"k\"", TraditionalForm], 
    FormBox["\"\[Lambda]\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  PlotRange->{{0., 25.657567985979902`}, {0., 13.851698891271297`}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{{3.520017104455772*^9, 3.52001714944718*^9}, 
   3.520017193019993*^9, 3.520017274917819*^9, {3.520017515426833*^9, 
   3.520017536788949*^9}, 3.5200178359177513`*^9, 3.5200180453899527`*^9, {
   3.520018107580701*^9, 3.520018189304064*^9}, 3.5200182865543633`*^9, {
   3.520018763527689*^9, 3.520018771002705*^9}, 3.520018900196726*^9, {
   3.520019815884761*^9, 3.520019858068605*^9}, {3.520020618651289*^9, 
   3.520020669839753*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"sol", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"NDSolve", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             FractionBox["1", 
              RowBox[{
               RowBox[{"k", "[", "t", "]"}], " ", 
               SuperscriptBox["\[Pi]", "2"], " ", 
               SuperscriptBox[
                RowBox[{"\[Lambda]", "[", "t", "]"}], "2"]}]]}], 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"6", " ", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "EulerGamma"}], ")"}], "2"]}], 
                 "+", 
                 SuperscriptBox["\[Pi]", "2"]}], ")"}], " ", 
               SuperscriptBox[
                RowBox[{"\[Lambda]", "[", "t", "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{
                 SuperscriptBox["k", "\[Prime]",
                  MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
              RowBox[{"12", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "EulerGamma"}], ")"}], " ", 
               SuperscriptBox[
                RowBox[{"k", "[", "t", "]"}], "2"], " ", 
               RowBox[{"\[Lambda]", "[", "t", "]"}], " ", 
               RowBox[{
                SuperscriptBox["k", "\[Prime]",
                 MultilineFunction->None], "[", "t", "]"}], " ", 
               RowBox[{
                SuperscriptBox["\[Lambda]", "\[Prime]",
                 MultilineFunction->None], "[", "t", "]"}]}], "+", 
              RowBox[{"6", " ", 
               SuperscriptBox[
                RowBox[{"k", "[", "t", "]"}], "4"], " ", 
               SuperscriptBox[
                RowBox[{
                 SuperscriptBox["\[Lambda]", "\[Prime]",
                  MultilineFunction->None], "[", "t", "]"}], "2"]}]}], 
             ")"}]}], "+", 
           RowBox[{
            SuperscriptBox["k", "\[Prime]\[Prime]",
             MultilineFunction->None], "[", "t", "]"}]}], "\[Equal]", "0"}], 
         ",", 
         RowBox[{
          RowBox[{
           RowBox[{
            FractionBox["1", 
             RowBox[{
              SuperscriptBox[
               RowBox[{"k", "[", "t", "]"}], "3"], " ", 
              SuperscriptBox["\[Pi]", "2"], " ", 
              RowBox[{"\[Lambda]", "[", "t", "]"}]}]], 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "EulerGamma"}], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"6", " ", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "EulerGamma"}], ")"}], "2"]}], 
                 "+", 
                 SuperscriptBox["\[Pi]", "2"]}], ")"}], " ", 
               SuperscriptBox[
                RowBox[{"\[Lambda]", "[", "t", "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{
                 SuperscriptBox["k", "\[Prime]",
                  MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
              RowBox[{"2", " ", 
               SuperscriptBox[
                RowBox[{"k", "[", "t", "]"}], "2"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"6", " ", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "EulerGamma"}], ")"}], "2"]}], 
                 "+", 
                 SuperscriptBox["\[Pi]", "2"]}], ")"}], " ", 
               RowBox[{"\[Lambda]", "[", "t", "]"}], " ", 
               RowBox[{
                SuperscriptBox["k", "\[Prime]",
                 MultilineFunction->None], "[", "t", "]"}], " ", 
               RowBox[{
                SuperscriptBox["\[Lambda]", "\[Prime]",
                 MultilineFunction->None], "[", "t", "]"}]}], "+", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"k", "[", "t", "]"}], "3"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"6", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", "EulerGamma"}], ")"}], " ", 
                  RowBox[{"k", "[", "t", "]"}]}], "-", 
                 SuperscriptBox["\[Pi]", "2"]}], ")"}], " ", 
               SuperscriptBox[
                RowBox[{
                 SuperscriptBox["\[Lambda]", "\[Prime]",
                  MultilineFunction->None], "[", "t", "]"}], "2"]}]}], 
             ")"}]}], "+", 
           RowBox[{
            SuperscriptBox["\[Lambda]", "\[Prime]\[Prime]",
             MultilineFunction->None], "[", "t", "]"}]}], "\[Equal]", "0"}], 
         ",", 
         RowBox[{
          RowBox[{"k", "[", "0", "]"}], "\[Equal]", "i"}], ",", 
         RowBox[{
          RowBox[{"\[Lambda]", "[", "0", "]"}], "\[Equal]", "1"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"k", "'"}], "[", "0", "]"}], "\[Equal]", "1"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Lambda]", "'"}], "[", "0", "]"}], "\[Equal]", "1"}]}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "\[Lambda]"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", 
         RowBox[{"-", "10"}], ",", "10"}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "6"}], "}"}]}], "]"}]}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.5200207482981*^9, 3.5200207718984528`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"k", "\[Rule]", 
       TagBox[
        RowBox[{"InterpolatingFunction", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "10.`"}], ",", "10.`"}], "}"}], "}"}], 
          ",", "\<\"<>\"\>"}], "]"}],
        False,
        Editable->False]}], ",", 
      RowBox[{"\[Lambda]", "\[Rule]", 
       TagBox[
        RowBox[{"InterpolatingFunction", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "10.`"}], ",", "10.`"}], "}"}], "}"}], 
          ",", "\<\"<>\"\>"}], "]"}],
        False,
        Editable->False]}]}], "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"k", "\[Rule]", 
       TagBox[
        RowBox[{"InterpolatingFunction", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "10.`"}], ",", "10.`"}], "}"}], "}"}], 
          ",", "\<\"<>\"\>"}], "]"}],
        False,
        Editable->False]}], ",", 
      RowBox[{"\[Lambda]", "\[Rule]", 
       TagBox[
        RowBox[{"InterpolatingFunction", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "10.`"}], ",", "10.`"}], "}"}], "}"}], 
          ",", "\<\"<>\"\>"}], "]"}],
        False,
        Editable->False]}]}], "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"k", "\[Rule]", 
       TagBox[
        RowBox[{"InterpolatingFunction", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "10.`"}], ",", "10.`"}], "}"}], "}"}], 
          ",", "\<\"<>\"\>"}], "]"}],
        False,
        Editable->False]}], ",", 
      RowBox[{"\[Lambda]", "\[Rule]", 
       TagBox[
        RowBox[{"InterpolatingFunction", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "10.`"}], ",", "10.`"}], "}"}], "}"}], 
          ",", "\<\"<>\"\>"}], "]"}],
        False,
        Editable->False]}]}], "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"k", "\[Rule]", 
       TagBox[
        RowBox[{"InterpolatingFunction", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "10.`"}], ",", "10.`"}], "}"}], "}"}], 
          ",", "\<\"<>\"\>"}], "]"}],
        False,
        Editable->False]}], ",", 
      RowBox[{"\[Lambda]", "\[Rule]", 
       TagBox[
        RowBox[{"InterpolatingFunction", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "10.`"}], ",", "10.`"}], "}"}], "}"}], 
          ",", "\<\"<>\"\>"}], "]"}],
        False,
        Editable->False]}]}], "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"k", "\[Rule]", 
       TagBox[
        RowBox[{"InterpolatingFunction", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "10.`"}], ",", "10.`"}], "}"}], "}"}], 
          ",", "\<\"<>\"\>"}], "]"}],
        False,
        Editable->False]}], ",", 
      RowBox[{"\[Lambda]", "\[Rule]", 
       TagBox[
        RowBox[{"InterpolatingFunction", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "10.`"}], ",", "10.`"}], "}"}], "}"}], 
          ",", "\<\"<>\"\>"}], "]"}],
        False,
        Editable->False]}]}], "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"k", "\[Rule]", 
       TagBox[
        RowBox[{"InterpolatingFunction", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "10.`"}], ",", "10.`"}], "}"}], "}"}], 
          ",", "\<\"<>\"\>"}], "]"}],
        False,
        Editable->False]}], ",", 
      RowBox[{"\[Lambda]", "\[Rule]", 
       TagBox[
        RowBox[{"InterpolatingFunction", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "10.`"}], ",", "10.`"}], "}"}], "}"}], 
          ",", "\<\"<>\"\>"}], "]"}],
        False,
        Editable->False]}]}], "}"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.520020760155785*^9, 3.520020766042248*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ParametricPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Evaluate", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"k", "[", "t", "]"}], ",", 
        RowBox[{"\[Lambda]", "[", "t", "]"}]}], "}"}], "/.", "sol"}], "]"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", 
     RowBox[{"-", ".5"}], ",", ".3"}], "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<k\>\"", ",", "\"\<\[Lambda]\>\""}], "}"}]}], ",", 
   RowBox[{"AxesOrigin", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.520020778960524*^9, 3.520020800164549*^9}, {
  3.520021026200305*^9, 3.5200210331790524`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwV0Hk01AkAB3AVm3YT25YjK5EjR6bW1qpevq6VslO5khxJW3QwbYrI9VCt
2RxJ1zwrbztJZW22KEOTxL70GmQ1MjP4zZjLnL+fhFj7x/d93vev73tfmzhG
8IG5enp69Nn8r0zNy9m4nMCGb7b4qdr4KA5/FLDFmkBBrFNh7z98nA2bXhW6
goCJwyUD9hs+tGul3yXZEpAXf8gv7J3trp5HbzgQ8Ca0T93EfOwrmpeymEZg
17X0uekGAnQ5U8q5XgQipmr+cPcTQJVZwV4dR2B0H71xDUeAI5muvCv3CRjF
HrThHxbCK1LSXUMRmLqMPkIhRLyt2yfFZhE2ZScISxMHcb74fZ15kQgmSR7r
4ycGUVrGLa3kiVBXkqYVZw3h0OmdmhM0MboYeT2/GQ9D8SHw2IN8MWRCL0VO
xTBy+vavV78TIzjqqjHLjkCq+VT5DG0EW+cc/OnJ3wT0CzOilGdGwEi+WPgn
RFAEjh9Q94/gq0E2O6FNBKOGFT2+mySIczpXMLZbjFu53dXWlyUoE7xlTQyK
kejMDG6ckMDItmlFbcoI+kSlr6v3SrGm0nReq6EEm+uCatuapbBSfNs9VSLB
ksbki+7OMhh2mh6vtJNi+SvD0opiGSwbImw9H0hxtr5iiDsjw9JRv0UmvjLk
fvQJjDgmx5JfWAbtPTLcrnnQld4vR2O4YHtglByWvG179YMV+GgusLinlMNi
55mjHzkKpDkaerNTFNiRkBcz4D6Ker6ryblJBXhtRnff1I5C1FC3iMscRelm
e3mLoxKXUie8nhsr0Wxi5eh/T4kxVXuovEIJz07h1cU0FSqaZPnpzipox7Or
GDUqzP9EZ9TfUyHfWN3KtFQjMc/7WdysOQ8VXGa0GkkxtGucSDX89Fy7U6+r
MdF6nLebpYaNYZjvQYkaO16Gd90ZUIMfTu9oW63BmOAQnW+pwVNi/byUdA0C
QhwTbsdoYFmxcjDthQbhNj9Mx5RrsNaf7xS/UIuzOtGwX58Gp14r5yyI1iJD
tU1aYK7Fh5Nut5qrZn0lZL0P0eIw/V1i9rQW5S8+18Ze1MI7eWAyOkSHl8Mp
8yffasFZaZK+8KYOucyQbS0LdFD401+u+6xDa1hxFNNfB9uRgkqjYBKCiLSm
kiwdWr4u+vX5bRLuyJp8/UiHI2NVtT/rU+DmyKUDSh064zx6E6MprHzlYR1k
R6Ko12zpTAyFdbtuunrakzBsPnWiJJaCR+egi4sDCfqp9rK/9lM4mcSd0V9F
Qhg9FDl5iIIJI+PzYxcSyxzMvriQQsHuU8cOS3cSj/cF9PcUU8iYc3X7v94k
lNPjbocvUOB9336J40PiZkvqjZlSCmIO581939n9UKnS+TIF/cWmpvk/kkj2
FBrnlVPYk0uboG0lcat5Q8aGKgpW/dNmZ3aSMHJUDrytphB/4ulpRhAJdtiV
2IQaCtfNwI2Y/YH1hNt+5SGFzDpWkFsoiZNHne3H6yls7Pj9Tm84CQNRe1HJ
YwrLUXitZTcJlwKGhVMDhRl3n8zqCBKmXwou7HlGQcSbtMiKJOHPqcnWNVFo
Wa3XHR9FYijqfNH5Zgo+3h2ZQdEkrAJy2PbPKZSJdy3bFENij5Zp3Myh4Ky6
e9duL4n/AIkbjaw=
     "]], LineBox[CompressedData["
1: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
H9lAXDxlKLmKjkm5dPclfWLD/wG/h3QH
     "]], LineBox[CompressedData["
1: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
S+EKQ3x/2R0gtNOZA6kfPf0zXPH956/m1wcPOeDV0OfXlEZFfKSnLhrlQMuO
2226A1T0sUb5bLrGBNwU1ptnaQug5bCgJHF6AmoNvn6QuSiARD+3yvSWTMCj
349pn7sE0Grfo+l2cxOwqbO/x8hcECH3Gjk7y0mw1jlmdjZbEKVYJiSvuj4J
Pl+bdJ1UhZC7qJAerX0S8kwCJvlzhRD3OZVnTnoKzIdJR7auMLqkTuV1OjQF
ZWW9340bhJFN58xp87Qp8Hr1+NbSEyJoxSvzRp+BKZhJTIqQXyqKwqKtnoI8
F8Lm6ImX3ooip977ErMuXFjWyrzeEiCGLitHvP2VzIU9HSd8JALFkOb86gsL
KVy4to9H7tB5MdTyx0iZ8oAL7cRs9+hFMaRvVi4nk8aF5QGWn4SixZCAwtla
48dc8HmYXRmSJYaOP7wweOYZFxbX1x3kfhND9EdaGj1vuXBVhJW7Z0AMWXLz
fb+Xc2FEdqjh5ZAYmr4zcX+oggtFgXG+p+hi6PvLrARWJRdqBFz3z/8WQ6kJ
6zYv1nDh9laiS06AhkbUlxgrNnPhZvFdr8+CNJTpLVqi9IkLEzb27teFafh+
e3Xl2hYurK4zuvtLjIY2tadf127jAvMOt6ZTioZilOdEjTuxnS/HxcjQ0IHU
1myTLi54RwR/3CZLQ3NfR1Q3f+FC1vpRrzJ5GhJaX9OwpYcLTcM+3WcUaWif
zGWOxVcuWNvffrZuDQ3punnNWvVyof/2wTGGEg0B9cKY9TcuzHxoj8pSoSHK
dGGJbR8X/g/793jX
     "]], LineBox[CompressedData["
1:eJwV13k8VF8bAHC0IDF3jGVkTwqVZEkqPU+2FkkklLJTqWwVKiXJVlSWKCLS
orQQUUqLwq9NiUppUaHZ74iyhfe8f83n+7lzz/Lcc57zHF3/MNcgKQkJiXxJ
CYn//8ZXBxwpfKaLXR0ejLZGDjgszfie1aiLDu/zhkXEqT8DulOf6KJXPg7L
NnFAKyepM7pOFx84fViAxBu9LxZ7VehiX4D+pevEven7Ftic0cXwWmFg2n8c
mH7GtfvoNl0s0ZMp3vCcA1yz4M7sYF38sb/cMJo4fDjv4LkAXXw1+UNTNvFq
7aGS6s26mN5Wb/eGuPvioRMCF13Ue6tos+IFB76r57ZELdJFzb5U1yUvOXAw
Q7Bs4lRdlKtXk7No5oCdBzOgS0YXexKz5T2Jq3p+QcMkXVyhfd1oP/Gfdzpz
Usd18P2tX1WPiWO+S7xQ69PBw15vp6x9zQHFyGMTvT/p4ODxKU0RbzgQ4T0a
E3FFBy/ILn7/7C0HFtmNKNat1MHQZZKTX3/gwPn7XjKjDuT9vsMOf4k9aLU8
azsdlJWnizTbOfBfn33mo6U66FhSXrKDuLpl39tXZjo4YiP5Q+4jB9gfNu+f
pKWD3rm6js6fONDY2Bbe0q2Nr1tWTuN95oBV0qL9v5doY0B6jnzkDw5c7RlS
/WipjYYdjAXniPVuDbQ9MtXGV0bMfS+JM0J+38gy0MaQsPdus35ywOvZ4y8O
Stq4OD3H/StxTtS70R98LcTENdku3Rx4/tVDqjdfC+8Zgp0ThwODMwoUN45r
4rSY5M/5Ig5kBa2/ozWsiUEf0260EU+7/aCkq18Tf4VYXJCnyfoIfrxqN08T
+2ddHY4jTvd1az3/ThOb59xdHyzmgH/gioIl1zRRKcesxeo3Bz4vHzjmt1ET
Sxln7f794YCyzNG6wFoNbK7W9/89ygHZq6u0X93WQPGuh/omYxz46Vx7ckGF
BhrSF+VCiYXSQ8VTSzWwcc+xpTzi1pEFextOkf/Xq9l0jXPAaL6gbVuEBrKk
17/4KsmFdMNxpVhDDaz13AmiSVwInOMSVXdWHbPi3x3aq8CFH8GfLsmdVscj
YlujRuJUS2qKV5Y6Bl34b1yRwQWWUcWW0VR1TE7ynHedmKHP3rc2Wh1bX+84
/5PiglzujOZ5ruo4qWflL08WF2rnw4sWGXX8EVQXEMTmgt2nhxNP752GTj7r
+mT1uPB0oUy7/Z5p+NX6UbovsZfgfmN/+DS0ftnhXkOssOXWn/Vbp6F0rP+e
oBlckG15nK3vMQ0X5iV3P9HnQl/KoptD5tNwc6tMcaoBF56YgsruXjVU8Az6
t9CYC2vHV7df3qmGs9YvkZu9iAuT7yU1dm5Tw3NfeabJxENB54qnBash03co
6Sdx/qdOzQxvNfxSG1Z1djEX3Da/Mkp1VsO1dm4zmdZcUFtwK/rifDW8tCwn
Ugq5ML0gn5f+l432X+YoSjtwIc1l5x2VBDYWUicL8l25oL4mZo51HBs1b6sx
p64j8dYZvRa4n43vGzXqYonf337xtnoXGxMmdjzwduPCVruf17YEslGBu2q7
vjsXJMTuUSP2bHSmc2LqNnChZXHCYp4sGw3tHXhsPy5cWHyjoCNbFf13VG2K
D+dCw7nL44cyVJH6sYYaJH4irrOZdVwVI9qdh0IjuBDs83h7VLIqRhU/3b45
kowv7KK99j5VzNxu0bZkNxf+PZMfzfNRxbs/VR5PiuGCanpYgdVsVdzhuXTf
ozguMA9btE9tUEHn0VbO5xNkPE2a7kOPVXA4IPmD90kuFHcKLvQ8UEGTtIDR
TuJnd5qrntxRwcL2t6LuDC7k0Gl5yddUUG3XgpDfWVzYLt4etCBbBZ8aer1R
Ps2Fd/MmLpgXqIK9unufJhVxwW+CT0PyZBU0enevSOkWF+ZX5attm6CCETd4
yhXElT61Xo4SKtjhnfjGqZILE8UqVxSHlVGqx1ElpYoLtiZFgdeEyujFsu4Z
r+ZCZveNZVPfKaNtZHnpv3tcsI58WBZ7QRmVFe1wdiMXWsPUddQclPGrguyI
bwcXPsZ/Cgm2VUZ51tLqCZ+5UF9y+UAVKmPXRo1bl4hnXZ084rpYGYcsWTuE
X7ggTmC5njFRRqvAIt6BTi54avl6OaqT5wq92mXdXIh8LzfHrlcJTzDnf1wg
JuNbaLAl4ZwSmsMwX2UyDwKPWGq/PKuEUgnyPh+J+aUz7innKeHoh7LpZ6V5
kHVKp7AsWwmx4kP+dFkevKrcIP8jVQnlzad6mk3lwS2bp1F7dyvhqvUvZAIV
eaB/SfeyyyoltHkY8FZKmwcy0T9nFw+yUEWmasEiKx7QKx6WzP3LwrfiK7vk
F/Hge/NycW0fCwfvvJf6Tvz57t/J7SIWlueps1OX8CDToX+WRjcLD65AnS/A
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
+mFwnds8vVQ2OV/aCjUu9sP/ABmQEcM=
     "]], LineBox[CompressedData["
1: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
yWN3Dsw/rkxmo4XO9pVS2CdVvQaup7KR7WqULY5NXnqof/EcG426H7Vdid2c
O/ci/jwbqXRFyIpi7932qv7QBTYy4pcmimC3a5Cnwi6x0f3JeKNlk9Lu+/lm
spGm2Z245ffFV/oQHLPYqLH5Imf5/xXtf0+wzGGjjufrkyWwG8YE/A2vsNGO
LVdspbEPOdVNq+Xj8zzQqKWI3XOupkHmGt5vjdy1atjlb58/Fy3A+cWzJkwP
u+7wkBZ3ERs9CExpXo9942bJ0+832Og/javmsHx+H7kqaTfZiHBn37gj9hHu
hsFPJfj8j3BX+2Ln3su2Hixlo6sK+5qOYGtJCn1trWCjM3GU3cnYbTfNz49V
sZHhyryovOX195bFr6hhoxu8uzM7sQ09zHzs6nD81vSXf8S+LDlptLOBjQw8
PivNL+93+vPw1IdsJGIiStTG8bbRJLDqRTPeT0v9XDvs6f/Ods0+ZiNRCu/R
EOw1lVO6xHY2+u47YlWMzc3jO7Kti400hIPk1uL8GBNc9Yb9At8PqcGHtmLv
9pF0Ib5iI4lTOpoJ2A9OuxLNBthI/K5CwXtsvgN7ziS/Y6OlwOmXmTg/Xx9n
vVP9zEb8NtFcXdiGhgm3HMfZaPjlTNovbPN31k2HJtnowPTxu6E4/w02mXZ2
fsXxH11n6YjvC4cPPRt2z+J4vVhul4IdbXdo439zbJRT0p/XhV1c919ey3f8
/ukn++3/YWcYKhB+s1G1z7btfvh+kiw9tC6Im4O0eFstirAjr816HlvBQdbi
9tE07MMjX3LO83CQz3dX3nhuAvhKeic28nFQFqk6sAXfdxOVKxaIwhy0zb5B
RhzflxI/6rX0RThok5Wofhj2poF3J2xFOaj7Ye1OcXy/rnk8eObQSg4S23Bd
/QS+f5vW/1UckOCgoL3netLxfR6pfiE4V56DajXlLVjYeSX7J68rcNDHvJuf
XHE9WLf2QvwtRQ7adaS1RlYYj/9SSqxWmYPeuYymPRTB75fJhPerchD1/BPi
GlxvePgZ/GJ6HNRwnn2yBPt4uBGFqM9BXhIx4gq4Xm249e2AogEH1XwZ6RUW
JwBctQUDKgfR+HYe+yFBAP2NVBG3dRw0wve6mR/Xw6uNhcb55hx0JPW0Ygb2
aKgN7aYFB/3l8FRK4fpZWRNfW2WJ9/NFnb+uLAE+ntuW3g4cFHfo0kKwPO7H
6t086bYcZGKuYCyiQgCr3t9kKycOShYaFQUdXA9TF2YWAzgoWMVVhIZd+aZH
hDeQg+z8hw2ycH1PXbwLIjs4SGlmzxQL13/pd04TssEc5PAqUvwuhQCk/cWC
xuEcJL8iKHLXegLccGluPLYP73/JeOwDKwIMeXp844nloKoTR9cn4/4lrkIF
icVx0EaB4+I+NgQYYe7Ml4rnoKLqX+a/bfF+RrLjtRM46MAL8xBn3B/9Daji
cU3moCcLRT/1XQjQZYNaCy5wkJHr4dzeALxfInGuDoUcBJf+LL7eTgCOYYDY
niIOsrpEbBnG/dh3IaX36Tc4SHNxk/d8EAHKNt3PfnmTg6aKb35ei/u71dyS
933L8Hq71kbO7yOArVWS8557HKTicpt2Mp4A/x5c/ZXbyUH/nu2nl97B/Sol
9bPYDAc9UBuKnC3H9Z7tv02JxkEn6w3VzCpxv50hOmxA56DrHt/1XlcTQORq
+rQLk4NmBBh3V9YRYE9DpdrlWQ5y923NbHtMAKPAhzrSvzmoUmjWbdVbAsgq
k1PIIrOoR+uPuws/EX4vrJ4w0p9FHRFPbgoIEuHZn2TnQINZtNWwMbwN9/u0
/QV1SZRZNGp71cxEDPuK9NFBw1mkei5bzxR/PwyUCjRFbZhFK09u3RhPJkLz
ZpZpBZpFtofH1qsDES6vT/8r6z6LvvhssuyLJcJJoaVj74/OIjeuHNPmeCKI
8ESb0Y7NIvn7urF3E/D3xk6puT/Rs+hFwPWxvGQi/BPdYql8chbdz2etjL1A
BIt3e63CYmfRQZdS9cQCItxS0RljJc+iyl9S8qmtRNhzX7HlZ+4scvecUD3G
LwXiU659HxpnUXRhd/fUdSngSH/2DF2cRc3i95gN/tIQuDqo86nVN/TFQ16o
giwDHjk1zNy4b8h4JG/tjKQslH2eMlnX/g0lWUxMVcrLwc0r3xuG/n1DEZY5
t1t15KFuc8uthg1zKJpRl0mOVACF8CM2lP1zqFE0dAtPvSLkrPA6vVQ4h4xp
ukpPJZVB/mG0rGT/HFpTGnu90kcF/oj2pXAvzaFjnoyf8ZokCFEeT1jQmEce
fN3P7XRJwNu04FmmOY8ucKInhCkkqOQTm/XTmkdhR072524ggTjNMa1Rex5N
h1fXdNiR4GLVrNVxvXnk3NM+7BVKgqd/9zxjGM6j2/bjbZE3SOCYIXm2wnwe
rZA5rbC1hATBb652eFvMI0fJ6cf2d0jAkVPo57KcR9lb0bjGPRL8TlDc7Inm
EUFO6dp8Gwm8KZKvFqzm0e47EnovxkiAYuV0jO3n0UPrufX9UyTY9Zmm9wl7
j67l+VczJDiTZ7SYuGkeTXRaqA/NkkD+fATXgMM8OuVA5PnDTYY9TLnC3Vvm
USIjOo6fnwy/97QKrHaaR8b8BU6SwmRo6tE0r8OG+B3vqRJkiPUNFPnnPI8e
SGZmW0mRwWqNVUmxyzyajam/5SFHhn5zwZWbXOdRYZYU/04lMtza2mzNwO7e
9K/hJJkM44d22V50m0f/A0iBVo8=
     "]], LineBox[CompressedData["
1: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
boU=
     "]]}},
  Axes->True,
  AxesLabel->{
    FormBox["\"k\"", TraditionalForm], 
    FormBox["\"\[Lambda]\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  PlotRange->{{0., 16.08676310508337}, {0, 1.303781240057505}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{{3.5200207800233727`*^9, 3.5200208006833*^9}, {
  3.5200210269833403`*^9, 3.520021033766203*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ParametricPlot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"k", "[", "t", "]"}], ",", 
       RowBox[{
        RowBox[{"k", "'"}], "[", "t", "]"}]}], "}"}], "/.", "sol"}], "]"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", 
     RowBox[{"-", "4"}], ",", "4"}], "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<k\>\"", ",", "\"\<k'\>\""}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.520017240021502*^9, 3.520017245683628*^9}, {
  3.520017290979206*^9, 3.5200173287536488`*^9}, {3.520018872718132*^9, 
  3.520018879350152*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwVlnc4lu0bx8tOVmayVYSSkBel86rISjxGZmYiNCgNZaRI2SNRVlRUCPXi
Ra5HRoqsQt3P89gjyibJ+t2/P+7jOj7H/c99n9/P+T0uGdcL5u5MGzZsmCef
/5/Vl+2eip3lQrMKvT8sZ3moDq7XtEusuJDRnheBI3Qe6ozH1iMnj3ChS6Za
5eEfeKjcurK3GsS40A8B6+XZNB7q584r1cdaNyNhp76C6wY81DdBTCbVmpvR
/VJrbY1sburIgQs1xkKcKKu+U0remYt6N8S4knmOHfmvf7amMXNSmzScg1vG
mNHT39a9zfdYqTbx/sXRDRtQr8XiOydOJurlZO49LqdXwI5/NvS60Rr+Za8v
rlO5CKI1w15cTEv4pnRqPUVqHkw3l01U0eaxPr/YrbbBadh9r7PoNt8MXr/0
Kbfo4S+IluJ8ykr8xFqHrvMsP/kBh6iD7G7ECJZd+WQcvWsYDvoc3Ce9bwC7
9bzhKkkaAJ1jD5w2f6Xj/LnkIWrkAJgOmEcZl9Ox9nkOu2+hA8An18ybmkbH
uSPc3DK+A1ATYTZq707Hxjq10qInBkCc5/S14EUaXsiOvZy1aQDiBOLk1SRp
WAonG02H98OmniWL+cvf8Z5Ze4X61D4Q1v6so6rXhWutcmz1E/qg75x4jLFi
F5a3mE3tuN8HSSN1axd5u3BloZ02y80+4Lq9ztr3vROParrd++LYB8wWR5eP
X+jEh9yGf0jK9UEmUfPHKu0rjv76t+/xlV6g/fxbgNc68PnX3WqdZ3uhKOnF
OBruwMbDz95KneqFEmPZwOamDvw5n7Ljx9FeYBtK9GZK7cCeqsnLevy98M8J
4seoWgdO2DL3bG9JDygdszkc7d2Oa1zliqLXGMD+ckmzrrYV677N8EieZ8C2
kjFlj+RWvNLk41owzgCvVT4l0bOtOHhEg5etmwFSg697X/C04l9aorUuRQyo
4LQXvGnXgp8biiZXuzNA+FfBzvb5ZkwxKXGYIugQsB4im6f2Ca92vqeXddBB
Q49NkJnjEzYs3ykc84kOD20NvbzoH3HissMztwo6mH33njsV9hHn+Vl9KnlE
h1mJGLWu7kYciYbHGKfo0Gzo7LYU9AG7LT8sPDFJg4noR9kBnXVY1y4x8cAo
DZLd3FIKc+vw/e5hQc0+GoTkBsDk9TqsNllFd+qgwf3QhK1xknX4zfsEIa8y
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
U7dA2x4vxf3msUL/A36Sp30=
     "]]}, 
   {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1:eJwV1Hk81OsXB3DGVpFChYaEFFJISSnnIYOKpCQqyViKomSvG4WrECVX0YIw
Wcq+TFGeMS5Za0LoO2MYO5csWUrk5/fHeZ3X+6/nOZ/zeh1F6tUTLiQ+Pr6W
5fp//1bpzB9Q44XIt8zeSgWFMtrMfLeI5Xqhi7oM7lGnUMaTmPHWyngvVEEL
YmWahTKM8hZUYl28EGOMcZQlFcrorzSKLhP2Qjm+P9VYr0MYhy5JUyUsr6E3
SQ6vL/XcYUieff+DMuaBKGL2FUWXbjP4vvGk7LTdEL+jJZ9Lyk3Gq/Prt7NO
O6LCGDkxuqA3g2sPvIVAW+Rip29k0u7OYFCzqXzOVuhH8RF3QUknxogPK6yU
3wxZSWjTtU+eYbh9N8rWWkCokO43Opx8gpE3KmdiarcXWdiIxL5NPMw4KHJX
tFxVC7l/1xEeLjVkvN9b7VcxthU5eYub5m3ex3jn6MGMeK6Agp8G+2haajMG
39z7pWi7AXX1pqo2XFVl1MiUr1drWYMiQzQED59VZDz00VlhvVoYpbbR5kqH
pRkWWh9ee15agobGnVka7WsZkasahMu7ZmA8vk72L54wQ1xw/6eBNePgdXJ/
NpX7By/168jkSw6CHKk/KbdpGg8d5e17NjsAIzaWHzQzp7HqWJHIO2IAtgVw
VnFDpnEJ260wKm0AHinhMKbeNCaFbUkP3zsAcTO0v1Je/cAvaZeoyZf6Qdvs
g7h75BT+L5Bj9XWsFyKVjEo3XJvAfpPpQ6/ae0HnXm5ageUEzjoRZZZe2Qsv
JCzJXpoT2M5TKFXxcS9Q6oUoxdxx/PxTaaiiYS9IrXAjveR9x8pCEddXJ/fA
meozFIXpUfwzxjXAOZAHtehZEr/ZMOZpSH4IdONBEcMralZyGK8SnruRb8cD
2cKLdDJ3CMv4HBy+s58HB61/iM34DGGk1GdRsNgN+zKcajrSB7F0XNWsamQ3
XNVkX169egB73/Pu/cu3C3Zn7oGwhR7cKziTmGjfBT8qgj0rG3uwSn3T8ylK
F1zZfLlS6UUPjsjUbbaV7oK/X/QdOW7Qgy9TmxUm33NB579CR4sQHpbbwG7d
LsUFnMY3f3ttN05P4V/4+acT2mm/hN9Ud2H6UkjT0kgnqGam6Me5d+FKFWrb
u6pOaKg7LbehhIt9/T5eZPt3Qlx9egth3okN32lqlYxwYGRUWbcunMA78xzm
szo44GCrFZ20jcDF97R4XTUcyIl6NJRb+w1P38hzFk/ngGPgXedboss+XU26
7sgB8zVNK8vi2vExB7rHZSsO+JTuszuu244zPixUpRtyoIJ7V5b8rQ3fzs5M
b1PigCXpmP0RhTYckCjrqzPEhrFLXRm/clpx46CSryrBhnXxbvpyJ1qx5OCx
k+ca2cALEMu8MtuC3bIVdt4uYENBDKU+Dlowd/1RmZIgNpjKHtjW3/IFSzpY
Usu3sMHBu0aoUuQTtnsd1/VwIxuMoM+X/1QTviD7IDJtLRt8TYclwlIbsXds
+NrbiwTYBuW3HTZowL3n+yKlCAI8og/FZwfUYoNwz82sLwS4pTS2sj5+xNpC
XlBXR4BAWXmuhvRH3CRAar5WRsAu4oJScGk1fiZ1+mpcEgFTUq9HnOaY2M3k
oPeuBAKeRV0QFjNj4rL7MUGrHxFgTfZ270yoxEGS4T7+4QQMJPjSZ/Yz8J7h
lRThOwS4zOppeMtgTI98M8S6SYCFmpquYfkHPNbdcEP2OgHrKLsd0/jLcZTc
hZNPPAgIVZ6katPeYep+vZbjbgRIJDyx/GX2Fg++yJmguBCgNuQt/nO0FJ9T
TE71cyRAj9nxWD22BEssenX32BMwlnKQFb2nGGdqS6RGniGARrrTuIkoxGNp
vx/dtyagz5y68YNyPtal+YVNWRHgvFVgr3pSDg49vaos1pKABhSgQZ7JxjZF
ITvdLQhgNZzimphnYgdR7c6bRwl4mFVnmpFGw56b+itrDhNwyeRilu7vVCxx
aqjjiBkBxS2bz46fSMGRHiSFFaYEMD8cbn586hkWsPGJ/UNZziutlRcp9BgX
kmZ37Fz2U1qWY17JQ8x1YUw9NibgrMps+3hDODagPeDqLVsyxp/mZBeAk5hP
JqSWLdPe3z3UYYYzTcJVVZdda5zepqh8HXb++Tvcd9k1r4R1/s0Pha+fkejC
soVTjj5ROh4DyVQ2vXz5veitlhd5/v/Aw7nZ6GITAjLv55C5HxNhsSz/wcDy
fz1Zxu2SMslgn5OKrZbn09D7kU7ZnQox9T2bZ48QkL2J7pXFSQebIQF6izkB
qtEG2fv/zoA/Y+vCR44RkOoYKbK0Ixvcsl4+2r+c75LrXepC2xtQFS3kVZ1c
zuN8s4/e7TzwHq8PCLchwEF0OoqzrgDm/xmzD7EjYPznfUGmWyFYrkp4Qj9H
QFeW9oPPFUVwkFytsfUCAQtb34qvWFcCgT6jWz45EXC5ZOcVT7dSSHcm3cu7
SMC5GUakEKaDffqBgk3XCKDikIIv7mXAl10W8caHgG6vXXfFKstBfjt70juQ
AE6+FTNU+gNUyck8ywslwKiifWlXNQbZEf8p5QgC7lM1PfRiGKD2nl+4OYaA
gKwMh9/7KqGoOjiO/ZQAhUDy9h+xTGh/kL5t70sCQpx7J9QNqsCW/9SbxgwC
xGst4u+PVAFNVqWSVkLA5xsfbVoOVYPszVe1Eq0EGOuT65/8/Ag034FoAw4B
O49JPzN9VQttaQr/0voICDZpWrXDug5kbBSalGcJkFeMrUjKr4dg9fxr3WQ2
EIlOIyZXmiBL6J9vPSpskD2SQ2kif4JHA69PbtZiQ7JLpnJ8wycQLZT+ak5h
Q7TD1/y59SygGfo897zOBnnx0Mnf/l+gNVfUM+gWG3JqqwN66r/A0cfpFsx7
bFB5+SB/RL4ZynTj7g8ks+Fr8EgO9d9mCJ9d7Z/GYsODLbCSJNUKFPEbBQIH
OHDQf4YSQW+D2OPbDjgc4UDMn+ntX8Xa4Y9/k+2ELQe4Fk5vzantkDtdXlrk
x4GvgxuNKld3gHaHqxKzmAPzg/q/v7h+g4+sT9PS+p3Ak/eLUFy+s6c0mFeW
7zxs6chy9LnBgY3Bmy60nu+EpYttKovNHLicRDO8GtoJKnX9skVhnaAeIFFl
/LkT3JXZwlUjXFAXFimJ8eICZWXPlACvG9T17LSLeV3gIP7WcorVC03reCFN
C10QWlTxUluoD4Ym5wSkxbohbOJK2It9fbBw4g6rZ1s3MBTbGhdS+0DSECbU
HbvhjJuo2YB/P5A+6ScmEt0gtCtKuUl9EJwOmk/0DvPAOci63+jtCGiGHNLv
DekDqmvzi/Wmk5A0z00eTuiDyKO3Lt50nQS/h79+S+f1gd6x5mlS+CQsvFI0
HWP3wUzSf+YB1ZNQbhw+GbS3H4S+Lb0lmUwB3+fyTpfZftDyTvBvsvgBunuq
/tz/ZxAiGjLO8t2YgfuCxxQK7f+DnTP10yLW8xAX0DGalT0FMYk0GUc1AYST
kixl4+fhSm+rgSGIoWvrVAX2p5LQrRB9433y61DiPO8zWlyFVp87fcP/gjxS
010ZH+0jhUaPr2HpG6mgd4Frn9k7k1HXRW7U4u8daO5Fi1cZWxlp95HXSzP3
oKC71rhGRgOFmGxXPNxogPRY7rmHKnSQtbFeri2NgiYqwsqNHh5AL/rNJAgr
S7SPnTblomqMyLPTJ9M22qCxmI9/MQ5boKk4nfpJ8QtoRVDPmS+V1mjD062d
slWuqK/NwOqdnj0aLVdbzBW6hvRirc+7abigVfqhvaJ6/khestZNYdwD3Xq6
8Uqp2230esH8qmytLzKTqntf13MX+d7oOp16MxiV97w32nwoFqnrTiUe2xWO
SsxczxmdTkCnMq57zZEfIqfexqMO2S/R1h/ZyQWfH6Mn/CEkQiALNSunxF9d
lYIOCQePqDwpQD0D7/cu6mWg9dnlDVb+71Dod8JZ0zUfkTLNCObvSrRSqXo4
MjgfPc8NDI6VZiJracv01Yn5aHJx/ZYoHSYSW7MlJ6IxH2V3CvrxXWGibc4v
a6h7CtD0n7Fn81wm4jzlJ7PEC9EpUxuKW1MVciSLfnHqKUJnZx5+Vf1UjeYq
qKNK/MVo9JWxXfd4NYrkxD6S2FyMah/v4GuUqEEZP3/Sgs4XI4+NZvPIpgZx
BL3WpHQWo799wiOzeTVotsoq2ai/BA3c3KpVTapFrQ02bHmRUvT+acv7/m21
aGybntcOtVJUJr22ECyWndbxfcSjFLkord3/MqEWcbny24d+laKC3S0JW3bV
oUZPLY2r8nS0e2nEYKNdHVpSiZPbYUhHv73WKpvfrkOe4vEKlhF0JPhcWs71
cx1y1UzvLMqho1eaXaPH5uoQebSXd7yZvrzPGm9fhXq0eZ9t6NY5OnogsmIt
YVqPys5Eye6Re4skBYMUb12rR/8DqJWzCg==
     "]]}, 
   {Hue[0.1421359549995791, 0.6, 0.6], LineBox[CompressedData["
1:eJwVVHk0lesXFkpChpAhN0V1z0VJSKj9fmWKUhRXksxFyZApTQdJmnBDKBcp
DfckZZa8nzGZFanvnIMjs2PoRIj4+f2x117P2ns9+1nP2ntvcPGxdufn4+Or
XIr/Z9bBcAdzq89IPiLk8IQ9jxRh0KaOq3xGC5ICV2g6PHLfwzCZhql2dP6C
cXiOOI8M0tnaW/WgHfk6Lrd8Uv2dfKXq+FmA24ac7Zx3y+l8J3/Kre6QTv2E
uvlND6VvmCDvtnKV3xm2okZhvdZ4ey7527SnNDS9DkXRjlbu6+8jX5TcnGV6
lSG5OqNoB8GvZC5jUw5L6A3a4Kzhk/uskazvYrhXJT1BMu/M5TQqy8lwD9+j
6VVJaMwowL/PMY/czlXtygq9gzhnj0027HlGGvVLmEk00FG8+uycYcYD8naC
fxXT9jx6EfVeurQ5hswMiuTPVjyFejpJDZdlEaSkrZz1Tx97VPbuPLYqCyT/
ez/4T4frIcTKlXBcbPEkcUG9QuenvSj0UsjOxmlHkqe3XntPug5SVJRFYbVW
JJ+KFGNnLQ3ZZqvGP9luTO7eKqxb76uEDqpzr4tq6JHSZ+L3C/BJIv994aaG
7Wrk0WO7dr3zFkTrX5U+tk5QJhVfhpexC6fhsZvA1JMyKbJYlr9ETXcU9tBf
rvoSuJxU85/e8myOC3ynF3OHYDnp959hbWE5FwaFQsxPrVpOBkli4duHuKDD
yBvLSBckm7tJ2SG/EXBP8vxrplWAdE74+114yxAg5YP6xqb8ZHLEYpvaWD/c
cm9/6jCygHlzk3HCVf2wrTjz5IvEBZy4kzNqn9IPmr223vf2LuDoOzK6Nmb9
0FeXNKv58DeemRX2iXveB2tNnB+fsZ3HiUWZv0PpvVBmUKN9oW8W0892pshc
7AE5OasEa9cpLDlvO3rZsQdGrvsoGClPYWbkY3W0twfKP8WvTGVP4qyTIeYt
q3pA0ufuGvqxSfzy/JClRDoHNia4PR2w+YEHG0eOpFHd8J77QZbm9B2bDocf
9qzshrwFG/r8xu/Y7FXYiUhGN3R9RE0q/RNYoF10+PXVbki/m+Xj6T2Btyy/
OdpC64ae3QXIeXEMP2q8ZJws3wVaz8dnXd1GcFsTY1J0qhPYDza8DvoxjI/v
SNSUa+2EWsauv8UihnF4gVMc72YntFVMdL3LHMLyxepnHi/vhJbo23snhgdw
7kO17vI+NuhENLX0Xx7Aa+/VvvarYYPJXYbLYckBLHMtZOX1aDawT9RqB+zq
x9ejQs/5ybKB8FqhWn23Fw+tp6dJzrFgd3KtkMKmXlywxjgHulkQLL77duvb
b3ihxNtjH4MFmUP9bk7DPZh/stOfac6C0jwp92oLDpY2FmaxdrCgHQXvm+7t
xt+S3tqcVmKBm7XN14tXunGRXmS1Io8JmeCePOzWhW9tn9EZymACLf9lSZ8B
C9c+K5T1jmWC7r/6jMt0Jk7MeH3K4yoTLpfc671ZTWHhmb36RY5MUJau2DVz
+CtWMEvUlDjEhMpfWmbW97/gd9mv6SxggkmZkLRMZwfmecpqtG5kgtc62aLa
s5/xzIo0sVlpJiQdbHDNzWvHMb1nD8cLLfHxhUT/mm/D9QWRCqpjFPAfP7Hy
n7ufcHCKx9wjkgJK9XB8bH4LbrIPUXQqoKC4zOKDMF8LVvpauiqGQYGQXLHU
3YQmjHpLXhMpFIx38d8XrKjHix1eitVxFLCSoiQm7erwuWKdouJoChKPsg7a
TNTi07kVAj9DKch47+FsqVyDxUOkAnYHUOCyws+VKqrCHNrz5ClvCnQFTIPK
rCqxBF3M/o/TFNjNe4lPD5fj8wddHha6UMDZfO3IhWsk9nfK2F9+goKAyDeW
1w3LcMnLOwcMjlHA1ax+keL7Fg8HdsVtsqFA8cYGb9UnRZihqbmSbkXB5/79
y9ZS+bhaaSbN3JKCFHnOLQ/xXHycF2kRaUFBTH57jZBxDq6YFV3ctp+Cm52C
dsypF7hoLD3H3JSCK/2BdgouT7Dh2T/t2o0p+Guo3vJcahr+a8XW8WYjCo5d
DzfYFByP20Oe+ukvYfO689foj8Lxjd0b2dJLWPntq1BbsxPw5fUnzZNLmNr7
8mThZDTsUlzwll/ii4n6oHVCOQmyq37d32dCgQ5HJdEtMwPu5t/LZS/Nl00M
tO/TfQqfUlLeDyzpo/nHx36oY4B9TDnL+QAF6rTeyvhtr4HLevDb4tCSnvow
idW/cmGVbKpuljUF03KidcyqAihP+J3ga0tB0/XOyFWxxdD/5Jvaf/ZLems2
q2UdLwXu0yOrbE9S8GnmyKOSLRh4gZrGfm4U+EadHqH9IsHvlgFv3pOCxrTj
VJlTBXyLkqHN+iz55WIk++h9JZQ+kH247zIFZRxT+zOJNeBQz5b45xoFz57E
2p1YeA8Wfvl0q9sUiDXNxeZ7fIDlPWEdKqkUhAXvzc7RawA/SZUVO7OW9q06
O/nko0ao0lTHb19RkG60Dt8WbQavlpgAhSoKRu9p/Db83gJxrHzet2YKynel
PgsuaIUXgg7FO1gURB1bLi5y6SMMWYbKn/pJQW+Nb6jFyjbwqP9T10KQCeaV
1fp8zW1QJ9WYUSDFhNZG3R1Kie3w94Yr0arbmaCtl3gybVMH7Ho7nrqFWLrf
Dh830bEOyJ7YrJVrtdT/kmf0veALXH4j8qd7ABNccvIOaZlTQKi28+8hmbBV
mqbIF8yGKU3B0rttTChukIhI2dcJTcXaHV5DTLD5S+xig0QXfDkDX2qkWcAy
i06LsO2GlOr5PxT8l/7T29Rbj39ygAh7mnXflA3rtuds22/WBxbZktfa3djw
VaTjjGleHzheVEvKCmdDZ5u7/RvlfjAerC4VJNlQFazf9/lXP9h8+EegguiE
wKfWeol5g/D6Y2vMR+cuGH+haNEOXBDR+ELE3ugCm8aLto9yuWDMqOGMvOoC
nY0SSotbRuH2juBliK8bjgxWiflJjcGJkQ3iyUe7wfZ4SHPQ2DhoSJucfCfK
gd9iXHyr5zsUdrCTUlQ48D5V5fIBJR4kntHPqtDnAJl41srBjgdWvj9aJz05
IDyxYOTdzIOGQuNGbj0HRhdzO33Lf4CLeFzGzX97QHXgztRA/hS4BrJv4LBe
0BTMKt02OAtbPKsKhx2HYNwylfCilqFkOl/jfc1JSHfRO5d1Shz1ikU1yJgs
Q+sk/Vbb9imiJOhJ7fgsioRYp3rjY7egBIPP+TGG8ijHWN7duEAb0We8d2zs
3YS+zltODP4m0LRKIdfZUguNtkwyyxQskeE9623yc4AC5pXOzBywRyK9R94Y
jZgjzmq8kKTigeSeeXzw9bZFlfbnWoX8/ZGsacGa8QhX5BPi6jMiSkcW3DqS
cvBFze7LBPYP30Rft9KFTZ9dQqtpP1Mq4u4jWSnb57D1BrJe5qet/S0TVctl
ZU5sj0c5Nh/KRR7mIIkDbRCbmoGGLhU1ts2WorD1ck4BD18ioeErjon2tUiK
F79Mf6EYbXI4f6DJqR2djTMXiUmoQfruvgfW3OtBKTEzHVaDH9EpuxbnPvlx
FLvF4obZjW50Tap8vGT7HDLoanRMYY6gIq0tJt5DKwiPlasC9Q2mUVHVhZaj
imuIyDO4uclAkOjGYhdoj5WJK5n1JqJzEoTJXqEV4WNqxBo7hvCVjZJE0bfH
467b1IkFvcyzFuaSxFWXG7EsX3XixKji6fkUSYJvR1DA/Sl14qqp03QTkiJC
HpWw7FdsJcT2YKW5f9cQFcGO7zVUNImoiMdbBRmyhB5rbfGtJ1qETirNNrtb
lpAK2rCd1aJFTOo7ffoos5aYEXA2iZvXIo42qe6NCVtL2ORs5qnb7CBso188
n3KUI5re3jltJKJNqB000ryqpUBMiDtU1t/SIc4XaBce81EgmlR+nPryTofw
3hOWXM5QIJ4ysyyPTegQIzsT4vfQFIms/o9Kpba6BEfhu4gUbR1Rv3uIq0Lb
SWQn3ea75LWO6JwZKJlw3ElkzdsPXmasI/g9F8P1E3YSQ20MuUNaSsSflwdu
7RfQI0p0KtU3BCkREfRlcpIGegQMEPWxJUv1uqs69uf1iJs3FFzSFpWIOwpb
JTcz9IjhoFgXS+M/CPO0PCqwT4/4HxNJIx0=
     "]]}},
  Axes->True,
  AxesLabel->{
    FormBox["\"k\"", TraditionalForm], 
    FormBox["\"k'\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  PlotRange->{{0., 1276.858720561299}, {-571.8260873401217, 
   893.1897293999809}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{
  3.520017247592066*^9, {3.520017292918084*^9, 3.520017329378236*^9}, 
   3.520018722364335*^9, {3.520018873329479*^9, 3.5200188797713413`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ParametricPlot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Lambda]", "[", "t", "]"}], ",", 
       RowBox[{
        RowBox[{"\[Lambda]", "'"}], "[", "t", "]"}]}], "}"}], "/.", "sol"}], 
    "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", 
     RowBox[{"-", "4"}], ",", "1"}], "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\[Lambda]\>\"", ",", "\"\<\[Lambda]'\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.5200173610030003`*^9, 3.52001737201956*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
     "]]}, 
   {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1: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
LnPrqTpwHMwv8vVjQJT3dPqkXB38D8pivNE=
     "]]}, 
   {Hue[0.1421359549995791, 0.6, 0.6], LineBox[CompressedData["
1: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
     "]]}},
  Axes->True,
  AxesLabel->{
    FormBox["\"\[Lambda]\"", TraditionalForm], 
    FormBox["\"\[Lambda]'\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  PlotRange->{{0., 1.9762792652840622`}, {-0.0009343041901157438, 
   2.1146959618395287`}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{3.5200173729210577`*^9, 3.52001872643351*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ParametricPlot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"k", "'"}], "[", "t", "]"}], ",", 
       RowBox[{
        RowBox[{"\[Lambda]", "'"}], "[", "t", "]"}]}], "}"}], "/.", "sol"}], 
    "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", 
     RowBox[{"-", "1"}], ",", ".5"}], "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<k'\>\"", ",", "\"\<\[Lambda]'\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.520018667050082*^9, 3.520018707070416*^9}, {
  3.520018918881008*^9, 3.520018929081811*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwV1nlYDt0fBvDSvlhSKJLQItVblD3dlSRCKy0qbZSK3iiVFkmK5EWJtC9I
i5IQftJGFCGRVKJnm6enbVqk8tDv+GuuzzVnZs45M/P93ks9AmwOzBAQEJAU
FBD4e7zNylhotbsJd3KlDuwP6oDCDGmlqL1N+OTcKPMyogPrlHiXS1ybcN7d
S1j3TAcmAmJfSwY0YXLXk0ciVztwuE0t4c3FJrQdid1ZU9kBv5HbdgdampCr
IHkl8FcHeg0T5AfsXqN7vF6t5nQn7jbuE3VxeQOHi3l86loXTOSWC1nnvoWB
qai85+9u+BQtyq72fI9VefTJmhvfscFo6/Om4Bakai+TC2jqgeixRMEtNz6g
9keKy3dpJpYZV8dW1bfC2+r1hOkmFh6GpglbCn6Ck0DAkHgMG9XjP8IT0Ybu
ZuNq42oOzEcCrWOOfEbooOiFtB4KVtVamnOeteNbbP9Il2wvNo2Lvdv25wsM
ZLudw9R56BKSuT8Lndj8JCVUdGUffDvp1JX5XXCOmj0aotePvbJ8FY+fX9H0
qrgXiwZw05KxxzDwG9572qgGCA3iYMSCG9zj37Hcp+9i5odBXNt+a1W3Vg+0
fHVkDKKHINe+OsvxZw+Clf/rWSZLI+bx+9/2Uz3Yc6nyqIkcjaCM1cV7f/eg
SqLGxX0ejch3wUN2Qgw0hK4zzlxAo/2F+5I9sxno3mNmMFORRmXjrBVe6gxc
l7f/2axC48qr2rVV9gx4qSuu/LCGhk13kIbrYwYkvy0KYu6hEVeurXDvKQN9
bgG3B/bS6Dsl4yNaw8CUxOj8n/Y0sj9nLr/bwIDamcN5Yk40xMLzZcU/MjDh
63N0iSsNH0M9TuMgA3fm5dAaB2l80+95naLChI6n1+aiYBoZLg21P9SZuKxe
UZx+nIai8pj8Xk0m6mxP2iaG0Ni06HDfgtVMWOucsvQLozERVbosB0zo+zRN
LImkoZBp0VvnxERh1PRMr1gacknK1jaXmVhfX2hin0Tj3XPzjNIrTIS1awxq
JtNI3rJzm1QqEz+azTumiR8tVq96kcXEy7d+QTdTaDi4TWmghAnP+Pi7VCqN
8AeJ801fMlG8P3KHeTaNXQ0OZVd/MzFJeSudKKYx9/fkvGkBFtZkDjPXltBQ
FjzX7S3MgkBuMm+E+MzSipSNUixMLV/3P59SGlKUZBZLnoUPujm+FuU0Xjkc
VLXQZ8G3OkRs4CENrVGhWA8/Ft4dpn1za2lE7TDiph9hwSJOdM+mOhp342Pz
PwWyMD/s+fWPxLYbXZbsCGWhc9xRT+Q52b9fHdrrzrDgn/e1wLWBRk2Z272l
2SyEzFqQNdJEI3r5yqfrW8l8zqYJZrfS4LXdU4xsY6GkKs5G5SONj90ibbVf
WBAO3D19m/jMLxPbnd9ZeJWX7n/3Ew3JnNywAwMs/PR1u1b5mYaqqU7MbTE2
jmj6rivopHEzxooVaMCGt4DgmBSTxhLtti5xIzYC8l5axRGbTTYiZwsbZaIu
g9PExe9Ntr7fwUa5+rp+mkVjzcpDVmsc2ehjnh5r5NBYUCcYInucDYXFJWYO
PLK/fveVysPYaBL/91EDcYM4vcoykg1G2kJ//T4aKYXm6YmxbBhqHb4+s59G
h2h8uHQymU9X98zKARr1OqwY5btsSAquP8KhafTs+dL3vIINrdIFYtuHaTSt
PVl7qJKN5KcKzCJiLxO1ivvP2HiU0+XlP0LjZXZPuWUzGx9kGi5zRmncb5HT
TuOxsUky7UblOI3XHrPST6lycOjA/3Y2/6JRIjQ0PraCA4VLzVGyfBrlehcr
fLQ40FJ9MMuR2Cthh6W1Hgf9V6zNGcR2B23nqhtzkD3zq8rAbxoFtuxWljMH
g9G7rrCmafAvfDBxdePASau1RFlgGN4rAmXbPTlYvtpbxZn4P9XpL298OTjy
R2JVC3GLltifJ6EcUE2+dRWCw2Dcli0rvMLByrrNn52EhpF+e42RRioH+r/n
8RKJC+34eoXpHGzXMXJ5Rnzv0f0tRXkcOH/q8loiPAyuXqRI+V0O3MRP/PpC
7DL73zt69znYcklFVkxkGN+zYh49rOTgq9rz83rE0wW7J6qecXDebmFOAnG3
g6ZyyxuyHwof7FeJDmPNsm7G3vccPFkaFOZILOWpLfG1lQM913p+NHFp+9do
XgcHp72aV7wlrlinoyTZy8F3JwsFd7FhqASzFjuLUPCmmwMPiQ9DfEedRZs4
hS2yxsvjiSMHzDqspCkkJ0kY3iC2jYlS2CZL4U7fRFkXcW6jwbL1SykoCrLj
zSSGocvg7H2gQsH0z9W4/cT/Mor7V6+gsKTfaSiEOJBVs0lHh4Jv3/HpW8Ss
O2WHtDZTwKtkxT/E10sab5cYUTBKPXRkruQwzkcc265tSmFYZJamGnGzSXmZ
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
HM7G/wEj7F00
     "]]}, 
   {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1: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
fx1O01Q=
     "]]}, 
   {Hue[0.1421359549995791, 0.6, 0.6], LineBox[CompressedData["
1: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
     "]]}},
  Axes->True,
  AxesLabel->{
    FormBox["\"k'\"", TraditionalForm], 
    FormBox["\"\[Lambda]'\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  PlotRange->{{-3.771964708736819, 7.888253117016207}, {0., 
   3.195867192509942}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{{3.520018674514052*^9, 3.520018711889985*^9}, {
  3.520018920658917*^9, 3.520018929429674*^9}}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{974, 769},
WindowMargins->{{46, Automatic}, {Automatic, 6}},
FrontEndVersion->"8.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (November 13, \
2010)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[567, 22, 243, 5, 76, "Title"],
Cell[813, 29, 107, 1, 46, "Subtitle"],
Cell[923, 32, 124, 2, 27, "Input"],
Cell[1050, 36, 1328, 32, 103, "Input"],
Cell[CellGroupData[{
Cell[2403, 72, 414, 8, 27, "Input"],
Cell[2820, 82, 1136, 31, 51, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3993, 118, 847, 27, 51, "Input"],
Cell[4843, 147, 778, 26, 51, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5658, 178, 314, 6, 27, "Input"],
Cell[5975, 186, 3175, 97, 137, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9187, 288, 3139, 95, 139, "Input"],
Cell[12329, 385, 2985, 94, 137, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[15351, 484, 836, 14, 27, "Input"],
Cell[16190, 500, 4031, 112, 82, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[20258, 617, 490, 11, 58, "Input"],
Cell[20751, 630, 2991, 92, 82, "Output"],
Cell[23745, 724, 1247, 37, 66, "Output"],
Cell[24995, 763, 2929, 90, 82, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[27961, 858, 390, 7, 27, "Input"],
Cell[28354, 867, 3176, 99, 93, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[31567, 971, 532, 8, 27, "Input"],
Cell[32102, 981, 1394, 46, 47, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[33533, 1032, 301, 6, 27, "Input"],
Cell[33837, 1040, 1504, 42, 51, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[35378, 1087, 355, 6, 27, "Input"],
Cell[35736, 1095, 853, 25, 53, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[36626, 1125, 118, 2, 27, "Input"],
Cell[36747, 1129, 107, 2, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[36891, 1136, 209, 5, 27, "Input"],
Cell[37103, 1143, 300, 10, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[37440, 1158, 386, 6, 27, "Input"],
Cell[37829, 1166, 3741, 106, 113, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[41607, 1277, 3786, 106, 115, "Input"],
Cell[45396, 1385, 3870, 109, 104, "Output"]
}, Open  ]],
Cell[49281, 1497, 2978, 88, 81, "Text"],
Cell[CellGroupData[{
Cell[52284, 1589, 5913, 152, 229, "Input"],
Cell[58200, 1743, 4763, 157, 103, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[63000, 1905, 171, 4, 27, "Input"],
Cell[63174, 1911, 729, 25, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[63940, 1941, 1271, 29, 27, "Input"],
Cell[65214, 1972, 53765, 893, 227, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[119016, 2870, 5861, 150, 245, "Input"],
Cell[124880, 3022, 4565, 153, 103, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[129482, 3180, 738, 21, 27, "Input"],
Cell[130223, 3203, 46344, 772, 74, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[176604, 3980, 663, 19, 27, "Input"],
Cell[177270, 4001, 14561, 249, 415, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[191868, 4255, 600, 18, 27, "Input"],
Cell[192471, 4275, 30808, 514, 400, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[223316, 4794, 658, 20, 27, "Input"],
Cell[223977, 4816, 23703, 399, 138, "Output"]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
